{"pageProps":{"data":{"answer":["\n&lt;p&gt;Event bubbling and capturing are two ways of event propagation in the HTML DOM API, when an event occurs in an element inside another element, and both elements have registered a handle for that event. The event propagation mode determines in &lt;a href=&quot;http://www.quirksmode.org/js/events_order.html&quot; rel=&quot;noreferrer&quot;&gt;which order the elements receive the event&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;With bubbling, the event is first captured and handled by the innermost element and then propagated to outer elements.&lt;/p&gt;\n\n&lt;p&gt;With capturing, the event is first captured by the outermost element and propagated to the inner elements.&lt;/p&gt;\n\n&lt;p&gt;Capturing is also called &quot;trickling&quot;, which helps remember the propagation order:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;trickle down, bubble up&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Back in the old days, Netscape advocated event capturing, while Microsoft promoted event bubbling. Both are part of the W3C &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Events/events.html&quot; rel=&quot;noreferrer&quot;&gt;Document Object Model Events&lt;/a&gt; standard (2000).&lt;/p&gt;\n\n&lt;p&gt;IE &amp;lt; 9 uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener&quot; rel=&quot;noreferrer&quot;&gt;only event bubbling&lt;/a&gt;, whereas IE9+ and all major browsers support both. On the other hand, the &lt;a href=&quot;https://stackoverflow.com/a/10335117/1269037&quot;&gt;performance of event bubbling may be slightly lower&lt;/a&gt; for complex DOMs.&lt;/p&gt;\n\n&lt;p&gt;We can use the &lt;code&gt;addEventListener(type, listener, useCapture)&lt;/code&gt; to register event handlers for in either bubbling (default) or capturing mode. To use the capturing model pass the third argument as &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;\n\n&lt;h2&gt;Example&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;div&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In the structure above, assume that a click event occurred in the &lt;code&gt;li&lt;/code&gt; element.&lt;/p&gt;\n\n&lt;p&gt;In capturing model, the event will be handled by the &lt;code&gt;div&lt;/code&gt; first (click event handlers in the &lt;code&gt;div&lt;/code&gt; will fire first), then in the &lt;code&gt;ul&lt;/code&gt;, then at the last in the target element, &lt;code&gt;li&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;In the bubbling model, the opposite will happen: the event will be first handled by the &lt;code&gt;li&lt;/code&gt;, then by the &lt;code&gt;ul&lt;/code&gt;, and at last by the &lt;code&gt;div&lt;/code&gt; element.&lt;/p&gt;\n\n&lt;p&gt;For more information, see&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://www.quirksmode.org/js/events_order.html&quot; rel=&quot;noreferrer&quot;&gt;Event Order&lt;/a&gt; on QuirksMode&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener&quot; rel=&quot;noreferrer&quot;&gt;addEventListener&lt;/a&gt; on MDN&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://www.quirksmode.org/js/events_advanced.html&quot; rel=&quot;noreferrer&quot;&gt;Events Advanced&lt;/a&gt; on QuirksMode&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;In the example below, if you click on any of the highlighted elements, you can see that the capturing phase of the event propagation flow occurs first, followed by the bubbling phase.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; logElement = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;log&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;msg&lt;/span&gt;) {\n    logElement.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; += (&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;p&amp;gt;&apos;&lt;/span&gt; + msg + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/p&amp;gt;&apos;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;capture&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;capture: &apos;&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;firstChild&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;nodeValue&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;trim&lt;/span&gt;());\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bubble&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;bubble: &apos;&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;firstChild&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;nodeValue&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;trim&lt;/span&gt;());\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;clearOutput&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    logElement.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; divs = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByTagName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;div&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; divs.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n    divs[i].&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;click&apos;&lt;/span&gt;, capture, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n    divs[i].&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;click&apos;&lt;/span&gt;, bubble, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; clearButton = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;clear&apos;&lt;/span&gt;);\nclearButton.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;click&apos;&lt;/span&gt;, clearOutput);&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;p&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:inline-block;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#fff&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#aaa&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;cursor&lt;/span&gt;: pointer;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:hover&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#faa&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#fdd&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;1\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;2\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;3\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;4\n                &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;5&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clear&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;clear output&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;log&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/cwtuan/je1g3f29/16&quot; rel=&quot;noreferrer&quot;&gt;Another example at JSFiddle&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://www.quirksmode.org/js/events_order.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;quirksmode.org&lt;/em&gt;&lt;/a&gt; has a nice description of this. In a nutshell (copied from quirksmode):&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;Event capturing&lt;/strong&gt;&lt;/p&gt;\n  \n  &lt;p&gt;When you use event capturing&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;               | |\n---------------| |-----------------\n| element1     | |                |\n|   -----------| |-----------     |\n|   |element2  \\ /          |     |\n|   -------------------------     |\n|        &lt;span class=&quot;hljs-title class_&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;CAPTURING&lt;/span&gt;          |\n-----------------------------------\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;the event handler of element1 fires first, the event handler of element2 fires last.&lt;/p&gt;\n  \n  &lt;p&gt;&lt;strong&gt;Event bubbling&lt;/strong&gt;&lt;/p&gt;\n  \n  &lt;p&gt;When you use event bubbling&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;               / \\\n---------------| |-----------------\n| element1     | |                |\n|   -----------| |-----------     |\n|   |element2  | |          |     |\n|   -------------------------     |\n|        &lt;span class=&quot;hljs-title class_&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;BUBBLING&lt;/span&gt;           |\n-----------------------------------\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;the event handler of element2 fires first, the event handler of element1 fires last.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;What to use?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;It depends on what you want to do. There is no better. The difference is the order of the execution of the event handlers. Most of the time it will be fine to fire event handlers in the &lt;em&gt;bubbling&lt;/em&gt; phase but it can also be necessary to fire them earlier.&lt;/p&gt;\n    ","\n&lt;p&gt;If there are two elements element 1 and element 2. Element 2 is inside element 1 and we attach an event handler with both the elements lets say onClick. Now when we click on element 2 then eventHandler for both the elements will be executed. Now here the question is in which order the event will execute. If the event attached with element 1 executes first it is called event capturing and if the event attached with element 2 executes first this is called event bubbling. \nAs per W3C the event will start in the capturing phase until it reaches the target comes back to the element and then it starts bubbling&lt;/p&gt;\n\n&lt;p&gt;The capturing and bubbling states are known by the useCapture parameter of addEventListener method&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;eventTarget.addEventListener(type,listener,[,useCapture]);&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;By Default useCapture is false. It means it is in the bubbling phase.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; div1 = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#div1&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; div2 = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#div2&quot;&lt;/span&gt;);\n\ndiv1.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;you clicked on div 1&quot;&lt;/span&gt;);\n}, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n\ndiv2.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;you clicked on div 2&quot;&lt;/span&gt;);\n}, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#div1&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;:red;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;24px&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#div2&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;:green;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;div1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  div 1\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;div2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    div 2\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;Please try with changing true and false.&lt;/p&gt;\n    ","\n&lt;p&gt;I have found this &lt;a href=&quot;http://javascript.info/tutorial/bubbling-and-capturing&quot; rel=&quot;noreferrer&quot;&gt;tutorial at javascript.info&lt;/a&gt; to be very clear in explaining this topic. And its 3-points summary at the end is really talking to the crucial points. I quote it here:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;ol&gt;\n  &lt;li&gt;Events first are captured down to deepest target, then bubble up. In\n  IE&amp;lt;9 they only bubble. &lt;/li&gt;\n  &lt;li&gt;All handlers work on bubbling stage excepts\n  &lt;code&gt;addEventListener&lt;/code&gt; with last argument &lt;code&gt;true&lt;/code&gt;, which is the only way to\n  catch the event on capturing stage. &lt;/li&gt;\n  &lt;li&gt;Bubbling/capturing can be\n  stopped by &lt;code&gt;event.cancelBubble=true&lt;/code&gt; (IE) or &lt;code&gt;event.stopPropagation()&lt;/code&gt;\n  for other browsers.&lt;/li&gt;\n  &lt;/ol&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;There&apos;s also the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/eventPhase&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;Event.eventPhase&lt;/code&gt;&lt;/a&gt; property  which can tell you if the event is at target or comes from somewhere else, and it is fully supported by browsers.&lt;/p&gt;\n&lt;p&gt;Expanding on the already &lt;a href=&quot;https://stackoverflow.com/a/4616720/3233388&quot;&gt;great snippet from the accepted answer&lt;/a&gt;, this is the output using the &lt;code&gt;eventPhase&lt;/code&gt; property&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; logElement = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;log&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;msg&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (logElement.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; == &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;No logs&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;)\n    logElement.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n  logElement.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; += (&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;p&amp;gt;&apos;&lt;/span&gt; + msg + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/p&amp;gt;&apos;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;humanizeEvent&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;eventPhase&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt;(eventPhase){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;hljs-comment&quot;&gt;//Event.CAPTURING_PHASE&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Event is being propagated through the target&apos;s ancestor objects&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;hljs-comment&quot;&gt;//Event.AT_TARGET&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;The event has arrived at the event&apos;s target&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;hljs-comment&quot;&gt;//Event.BUBBLING_PHASE&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;The event is propagating back up through the target&apos;s ancestors in reverse order&quot;&lt;/span&gt;;\n  }\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;capture&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;capture: &apos;&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;firstChild&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;nodeValue&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;trim&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&quot;; &quot;&lt;/span&gt; + \n  &lt;span class=&quot;hljs-title function_&quot;&gt;humanizeEvent&lt;/span&gt;(e.&lt;span class=&quot;hljs-property&quot;&gt;eventPhase&lt;/span&gt;));\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bubble&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;bubble: &apos;&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;firstChild&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;nodeValue&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;trim&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&quot;; &quot;&lt;/span&gt; + \n  &lt;span class=&quot;hljs-title function_&quot;&gt;humanizeEvent&lt;/span&gt;(e.&lt;span class=&quot;hljs-property&quot;&gt;eventPhase&lt;/span&gt;));\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; divs = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByTagName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;div&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; divs.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n  divs[i].&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;click&apos;&lt;/span&gt;, capture, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n  divs[i].&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;click&apos;&lt;/span&gt;, bubble, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;p&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt;;\n\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#fff&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#aaa&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;cursor&lt;/span&gt;: pointer;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:hover&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#faa&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#fdd&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;1\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;2\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;3\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;4\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;5&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;document.getElementById(&apos;log&apos;).innerHTML = &apos;&amp;lt;p&amp;gt;No logs&amp;lt;/p&amp;gt;&apos;;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Clear logs&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;log&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;DOM Events describes 3 phases of event propagation: Capturing phase  the event goes down to the element. Target phase  the event reached the target element. Bubbling phase  the event bubbles up from the element.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/LsIr2.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/LsIr2.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Bubbling&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-title class_&quot;&gt;Event&lt;/span&gt; propagate to the upto root element is **&lt;span class=&quot;hljs-variable constant_&quot;&gt;BUBBLING&lt;/span&gt;**.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Capturing&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-title class_&quot;&gt;Event&lt;/span&gt; propagate &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;body&lt;/span&gt;(root) element to eventTriggered &lt;span class=&quot;hljs-title class_&quot;&gt;Element&lt;/span&gt; is **&lt;span class=&quot;hljs-variable constant_&quot;&gt;CAPTURING&lt;/span&gt;**.\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As other said, bubbling and capturing describe in which order some nested elements receive a given event.&lt;/p&gt;\n&lt;p&gt;I wanted to point out that for the &lt;strong&gt;innermost&lt;/strong&gt; element may appear something strange. Indeed, in this case the &lt;strong&gt;order&lt;/strong&gt; in which the event listeners are added &lt;strong&gt;does matter&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;In the following example, capturing for &lt;code&gt;div2&lt;/code&gt; will be executed first than bubbling; while bubbling for &lt;code&gt;div4&lt;/code&gt; will be executed first than capturing.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addClickListener&lt;/span&gt; (msg, num, type) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#div&quot;&lt;/span&gt; + num)\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(msg + num), type);\n}\nbubble  = &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;num&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addClickListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bubble &quot;&lt;/span&gt;, num, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\ncapture = &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;num&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addClickListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;capture &quot;&lt;/span&gt;, num, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// first capture then bubble&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;capture&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;capture&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;bubble&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;bubble&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// try reverse order&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;bubble&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;bubble&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;capture&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;capture&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#div1&lt;/span&gt;, &lt;span class=&quot;hljs-selector-id&quot;&gt;#div2&lt;/span&gt;, &lt;span class=&quot;hljs-selector-id&quot;&gt;#div3&lt;/span&gt;, &lt;span class=&quot;hljs-selector-id&quot;&gt;#div4&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3px&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;div1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  div 1\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;div2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    div 2\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;div3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  div 3\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;div4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    div 4\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: Such behavior may vary according to the browser (e.g. currently occurs on Firefox, but not on Chrome and Edge). Nevertheless, I think one should be aware of it.&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I recommend this useful link: &lt;a href=&quot;https://javascript.info/bubbling-and-capturing&quot; rel=&quot;nofollow noreferrer&quot;&gt;javascript.info/bubbling-and-capturing&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/11361780/meirdayan&quot; title=&quot;590 reputation&quot; class=&quot;comment-user&quot;&gt;MeirDayan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment106698256_4616694&quot;&gt;&lt;span title=&quot;2020-02-20 11:15:15Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 20, 2020 at 11:15&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@CommunityAns: this site is excellent, but this topic, particularly, is depicted in a somewhat confusing way.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1219280/veverke&quot; title=&quot;5,947 reputation&quot; class=&quot;comment-user&quot;&gt;Veverke&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment110548728_4616694&quot;&gt;&lt;span title=&quot;2020-06-22 08:38:16Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 22, 2020 at 8:38&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Needing engineers to be aware of the difference of both, and have code that can be broken simply by choosing an &quot;incorrect&quot; propagation type, is in my opinion a code-smell (or anti-pattern). A better way to go about it is to just enforce a coding style where propagation type doesn&apos;t matter.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4757175/chris-vilches&quot; title=&quot;833 reputation&quot; class=&quot;comment-user&quot;&gt;Chris Vilches&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124809906_4616694&quot;&gt;&lt;span title=&quot;2022-01-06 07:42:51Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 6 at 7:42&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;code&gt;useCapture&lt;/code&gt; now supported in IE &amp;gt;= 9. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener#Browser_compatibility&quot; rel=&quot;nofollow noreferrer&quot;&gt;source&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/538551/beatgammit&quot; title=&quot;19,111 reputation&quot; class=&quot;comment-user&quot;&gt;beatgammit&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment26922276_4616720&quot;&gt;&lt;span title=&quot;2013-08-20 17:10:22Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 20, 2013 at 17:10&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I know its too late to put comment but nice article i found here &lt;a href=&quot;http://catcode.com/domcontent/events/capture.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;catcode.com/domcontent/events/capture.html&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2630817/just-code&quot; title=&quot;13,135 reputation&quot; class=&quot;comment-user&quot;&gt;Just code&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment28833955_4616720&quot;&gt;&lt;span title=&quot;2013-10-18 09:56:11Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 18, 2013 at 9:56&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Is &lt;code&gt;triclkling&lt;/code&gt; the same as &lt;code&gt;capturing&lt;/code&gt;? Crockford talks about &lt;code&gt;Trickling v. Bubbling&lt;/code&gt; in this video talk - &lt;a href=&quot;https://www.youtube.com/watch?v=Fv9qT9joc0M&amp;amp;list=PL7664379246A246CB&quot; rel=&quot;nofollow noreferrer&quot;&gt;youtube.com/watch?v=Fv9qT9joc0M&amp;amp;list=PL7664379246A246CB&lt;/a&gt; around &lt;code&gt;1 hr 5 minutes&lt;/code&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/409976/kevin-meredith&quot; title=&quot;39,806 reputation&quot; class=&quot;comment-user&quot;&gt;Kevin Meredith&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment31352116_4616720&quot;&gt;&lt;span title=&quot;2014-01-02 19:25:48Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 2, 2014 at 19:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The answer above correct in regards to the order in the detailed explanation, but leaves you thinking that trickle occurs second with &quot;bubble up, trickle down&quot;. Events always go through the capture phase before the bubble phase.  The correct order is &lt;code&gt;trickle down&lt;/code&gt; =&amp;gt; &lt;code&gt;onElement&lt;/code&gt; =&amp;gt; &lt;code&gt;bubble up&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1883464/runspired&quot; title=&quot;2,623 reputation&quot; class=&quot;comment-user&quot;&gt;runspired&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment56617481_4616720&quot;&gt;&lt;span title=&quot;2015-12-23 14:59:10Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 23, 2015 at 14:59&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&quot;With bubbling, the event is first captured and handled by the innermost element and then propagated to outer elements.&quot; -- You should point out that not all events bubble (e.g., &lt;code&gt;focus&lt;/code&gt;).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/452587/thdoan&quot; title=&quot;17,543 reputation&quot; class=&quot;comment-user&quot;&gt;thdoan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment88815074_4616720&quot;&gt;&lt;span title=&quot;2018-06-18 10:41:39Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 18, 2018 at 10:41&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Does not both happens, first capturing and then bubbling, also what is dispatch event?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5473170/suraj-jain&quot; title=&quot;4,267 reputation&quot; class=&quot;comment-user&quot;&gt;Suraj Jain&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment86381948_4616704&quot;&gt;&lt;span title=&quot;2018-04-06 04:31:36Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 6, 2018 at 4:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;a graphical example is here: &lt;a href=&quot;https://javascript.info/bubbling-and-capturing&quot; rel=&quot;nofollow noreferrer&quot;&gt;javascript.info/bubbling-and-capturing&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/11361780/meirdayan&quot; title=&quot;590 reputation&quot; class=&quot;comment-user&quot;&gt;MeirDayan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment106698397_4616704&quot;&gt;&lt;span title=&quot;2020-02-20 11:19:55Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 20, 2020 at 11:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Capture phase handlers are particularly useful when some element&apos;s code (code you don&apos;t control, like a plugin) is stopping propagation, and you really want to know when that event occurs. You can pick it up on the way to them instead of on the way back. You might not get it in the bubbling phase if they stopped its propagation.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1127972/doug65536&quot; title=&quot;6,329 reputation&quot; class=&quot;comment-user&quot;&gt;doug65536&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123817934_4616704&quot;&gt;&lt;span title=&quot;2021-11-20 04:48:13Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 20, 2021 at 4:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@masterxilo: no need for Fiddle, StackOverflow now supports &lt;a href=&quot;http://blog.stackoverflow.com/2014/09/introducing-runnable-javascript-css-and-html-code-snippets/&quot;&gt;inline code (stack snippets)&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1269037/dan-dascalescu&quot; title=&quot;128,657 reputation&quot; class=&quot;comment-user&quot;&gt;Dan Dascalescu&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment41637429_22172342&quot;&gt;&lt;span title=&quot;2014-10-22 08:10:09Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 22, 2014 at 8:10&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Regarding &lt;code&gt;the event will start in the capturing phase untill it reaches the target comes back to the element and then it starts bubbling&lt;/code&gt;. I only found the  &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow&quot; rel=&quot;nofollow noreferrer&quot;&gt;addEventListener&lt;/a&gt; has the parameter &lt;code&gt;useCapture&lt;/code&gt; which can be set to true or false; and &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventListener&quot; rel=&quot;nofollow noreferrer&quot;&gt;in HTML 4.0, event listeners were specified as attributes of an element&lt;/a&gt; and &lt;code&gt;useCapture defaults to false&lt;/code&gt;.  Could you link to a spec that confirms what you wrote?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/819887/surfmuggle&quot; title=&quot;4,909 reputation&quot; class=&quot;comment-user&quot;&gt;surfmuggle&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment68648152_22172342&quot;&gt;&lt;span title=&quot;2016-11-20 22:18:19Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 20, 2016 at 22:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/composedPath&quot; rel=&quot;nofollow noreferrer&quot;&gt;MDN&apos;s related doc on &lt;code&gt;composedPath&lt;/code&gt;&lt;/a&gt;, and the shadow-boundary for a DOM element, is great additional context&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/263858/new-alexandria&quot; title=&quot;6,576 reputation&quot; class=&quot;comment-user&quot;&gt;New Alexandria&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment113885497_50578746&quot;&gt;&lt;span title=&quot;2020-10-17 17:13:45Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 17, 2020 at 17:13&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The order of adding the event listeners &lt;b&gt;does not matter&lt;/b&gt; try you own example if still not sure.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/522058/sasidhar&quot; title=&quot;7,253 reputation&quot; class=&quot;comment-user&quot;&gt;sasidhar&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120415145_65761830&quot;&gt;&lt;span title=&quot;2021-06-25 11:44:23Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 25, 2021 at 11:44&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@sasidhar My example is self explanatory. Now if you click on the div #4 you get &quot;&lt;i&gt;capture 3, bubble 4, capture 4, bubble 3&lt;/i&gt;&quot;. If you reverse the order asserting &lt;code&gt;capture(3); capture(4); bubble(4); bubble(3);&lt;/code&gt; and then click again on div #4 you&apos;d get instead &quot;&lt;i&gt;capture 3, capture 4, bubble 4, bubble 3&lt;/i&gt;&quot;. This is a fact, even though I wouldn&apos;t be able to explain it.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4607733/horcrux&quot; title=&quot;6,488 reputation&quot; class=&quot;comment-user&quot;&gt;horcrux&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120437269_65761830&quot;&gt;&lt;span title=&quot;2021-06-26 14:46:16Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 26, 2021 at 14:46&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;tried your example in Edge and chrome, irrespective of order the result is always &lt;code&gt;capture(3); capture(4); bubble(4); bubble(3)&apos;&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/522058/sasidhar&quot; title=&quot;7,253 reputation&quot; class=&quot;comment-user&quot;&gt;sasidhar&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120517607_65761830&quot;&gt;&lt;span title=&quot;2021-06-30 07:42:18Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 30, 2021 at 7:42&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@sasidhar Sorry for the late reply. I use Firefox, anyway.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4607733/horcrux&quot; title=&quot;6,488 reputation&quot; class=&quot;comment-user&quot;&gt;horcrux&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125646912_65761830&quot;&gt;&lt;span title=&quot;2022-02-11 09:23:58Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 11 at 9:23&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":461,"title":"What is event bubbling and capturing?","content":"\n                \n&lt;p&gt;What is the difference between event bubbling and capturing? When should one use bubbling vs capturing?&lt;/p&gt;\n    ","slug":"what-is-event-bubbling-and-capturing-1657388059203","postType":"QUESTION","createdAt":"2022-07-09T17:34:19.000Z","updatedAt":"2022-07-09T17:34:19.000Z","tags":[{"id":2359,"name":"event-bubbling","slug":"event-bubbling","createdAt":"2022-07-09T17:34:19.000Z","updatedAt":"2022-07-09T17:34:19.000Z","Questions_Tags":{"questionId":461,"tagId":2359}}]}},"__N_SSG":true}