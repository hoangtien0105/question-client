{"pageProps":{"data":{"answer":["\n&lt;p&gt;&lt;strong&gt;Reason:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The reason that it&apos;s &lt;code&gt;undefined&lt;/code&gt; is that you are making an asynchronous operation. Meaning it&apos;ll take some time to complete the &lt;code&gt;getEventList&lt;/code&gt; method (depending mostly on your network speed).&lt;/p&gt;\n\n&lt;p&gt;So lets look at the http call.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;es&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;After you actually make (&quot;fire&quot;) your http request with &lt;code&gt;subscribe&lt;/code&gt; you will be &lt;strong&gt;waiting&lt;/strong&gt; for the response. While waiting, javascript will execute the lines below this code and if it encounters synchronous assignments/operations it&apos;ll execute them immediately.&lt;/p&gt;\n\n&lt;p&gt;So after subscribing to the &lt;code&gt;getEventList()&lt;/code&gt; and waiting for the response,&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;console.log(this.myEvents);&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;line will be executed immediately. And the value of it is &lt;code&gt;undefined&lt;/code&gt; before the response arrives from the server (or to whatever that you have initialized it in the first place).&lt;/p&gt;\n\n&lt;p&gt;It is similar to doing:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;ngOnInit&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;()=&amp;gt;&lt;/span&gt;{\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt; = response;\n    }, &lt;span class=&quot;hljs-number&quot;&gt;5000&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//This prints undefined!&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;hr&gt;\n&lt;strong&gt;Solution:&lt;/strong&gt;&lt;p&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;So how do we overcome this problem? We will use the callback function which is the &lt;code&gt;subscribe&lt;/code&gt; method. Because when the data arrives from the server it&apos;ll be inside the &lt;code&gt;subscribe&lt;/code&gt; with the response.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So changing the code to:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;es&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;()\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;)=&amp;gt;&lt;/span&gt;{\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt; = response;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//&amp;lt;-- not undefined anymore&lt;/span&gt;\n    });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;will print the response.. after some time.\n&lt;/p&gt;&lt;hr&gt;\n&lt;strong&gt;What you should do:&lt;/strong&gt;&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;There might be lots of things to do with your response other than just logging it; you should do all these operations inside the callback (inside the &lt;code&gt;subscribe&lt;/code&gt; function), when the data arrives.&lt;/p&gt;\n\n&lt;p&gt;Another thing to mention is that if you come from a &lt;code&gt;Promise&lt;/code&gt; background, the &lt;code&gt;then&lt;/code&gt; callback corresponds to &lt;code&gt;subscribe&lt;/code&gt; with observables.\n&lt;/p&gt;&lt;hr&gt;\n&lt;strong&gt;What you shouldn&apos;t do:&lt;/strong&gt;&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;You shouldn&apos;t try to change an async operation to a sync operation (not that you can). One of the reasons that we have async operations is to not make the user wait for an operation to complete while they can do other things in that time period. Suppose that one of your async operations takes 3 minutes to complete, if we didn&apos;t have the async operations the interface would froze for 3 minutes.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Suggested Reading:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The original credit to this answer goes to: &lt;a href=&quot;https://stackoverflow.com/questions/14220321/how-do-i-return-the-response-from-an-asynchronous-call&quot;&gt;How do I return the response from an asynchronous call?&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;But with the angular2 release we were introduced to typescript and observables so this answer hopefully covers the basics of handling an asynchronous request with observables.&lt;/p&gt;\n    ","\n&lt;p&gt;Making a http call in angular/javascript is asynchronous operation.\nSo when you make http call it will assign new thread to finish this call and start execution next line with another thread.\nThat is why  you are getting undefined value.\nso make below change to resolve this&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;es&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;()  \n      .&lt;span class=&quot;hljs-title function_&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;)=&amp;gt;&lt;/span&gt;{  \n       &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt; = response;  \n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//&amp;lt;-this become synchronous now  &lt;/span&gt;\n    });\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use &lt;a href=&quot;https://angular.io/api/common/AsyncPipe&quot; rel=&quot;nofollow noreferrer&quot;&gt;asyncPipe&lt;/a&gt; if you use myEvents only in template.&lt;/p&gt;\n&lt;p&gt;Here example with asyncPipe and Angular4 HttpClient &lt;a href=&quot;https://stackblitz.com/edit/angular-rhioqt?file=app%2Fevent.service.ts&quot; rel=&quot;nofollow noreferrer&quot;&gt;example&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Observables are lazy so you have to subscribe to get the value. You subscribed it properly in your code but simultaneously logged the output outside the &apos;subscribe&apos; block. That&apos;s why it is &apos;undefined&apos;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;ngOnInit&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;es&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;()\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt; = response;\n    });\n\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//Outside the subscribe block &apos;Undefined&apos;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So if you log it inside the subscribe block then it will log response properly.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;ngOnInit&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;es&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;()\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;)=&amp;gt;&lt;/span&gt;{\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt; = response;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//Inside the subscribe block &apos;http response&apos;&lt;/span&gt;\n    });\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here the problem is, you are initializing &lt;code&gt;this.myEvents&lt;/code&gt; into &lt;code&gt;subscribe()&lt;/code&gt; which is an asynchronous block while you are doing &lt;code&gt;console.log()&lt;/code&gt; just out of &lt;code&gt;subscribe()&lt;/code&gt; block.\nSo &lt;code&gt;console.log()&lt;/code&gt; getting called before &lt;code&gt;this.myEvents&lt;/code&gt; gets initialized.&lt;/p&gt;\n\n&lt;p&gt;Please move your console.log() code as well inside subscribe() and you are done.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;ngOnInit&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;es&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;()\n        .&lt;span class=&quot;hljs-title function_&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;)=&amp;gt;&lt;/span&gt;{\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt; = response;\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt;);\n        });\n  }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The result is undefined because angular process async .\nyou can trying as below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ngOnInit&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; res = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;es&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;();\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(res));\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Also make sure that you map your response to a json output. Otherwise it will return plain text. You do it this like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;(): &lt;span class=&quot;hljs-title class_&quot;&gt;Observable&lt;/span&gt;&amp;lt;any&amp;gt; {\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; headers = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Headers&lt;/span&gt;({ &lt;span class=&quot;hljs-string&quot;&gt;&apos;Content-Type&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;application/json&apos;&lt;/span&gt; });\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; options = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RequestOptions&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;headers&lt;/span&gt;: headers });\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;http&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://localhost:9999/events/get&quot;&lt;/span&gt;, options)\n            .&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;res&lt;/span&gt;)=&amp;gt;&lt;/span&gt;{ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; res.&lt;span class=&quot;hljs-title function_&quot;&gt;json&lt;/span&gt;();}) &amp;lt;!-- add call to json here\n            .&lt;span class=&quot;hljs-title function_&quot;&gt;catch&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;err&lt;/span&gt;)=&amp;gt;&lt;/span&gt;{&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; err;})\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Undefined because the value here is logged before any data from the service is set from that above subscribe service call.  So you have to wait until the ajax call finishes and set the data from the response data. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;(): &lt;span class=&quot;hljs-title class_&quot;&gt;Observable&lt;/span&gt;&amp;lt;any&amp;gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; headers = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Headers&lt;/span&gt;({ &lt;span class=&quot;hljs-string&quot;&gt;&apos;Content-Type&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;application/json&apos;&lt;/span&gt; });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; options = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RequestOptions&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;headers&lt;/span&gt;: headers });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;http&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://localhost:9999/events/get&quot;&lt;/span&gt;, options)\n                .&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;res&lt;/span&gt;)=&amp;gt;&lt;/span&gt; res.&lt;span class=&quot;hljs-title function_&quot;&gt;json&lt;/span&gt;())\n                .&lt;span class=&quot;hljs-title function_&quot;&gt;catch&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;err&lt;/span&gt;)=&amp;gt;&lt;/span&gt; err)\n  }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here make the Console log inside the  subscribe method that will make the log when the data is set in myEvents variable.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;ngOnInit&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;es&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;()\n        .&lt;span class=&quot;hljs-title function_&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;)=&amp;gt;&lt;/span&gt;{\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt; = response;\n     &lt;span class=&quot;hljs-comment&quot;&gt;// This prints the value from the response&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt;)\n        }); \n  }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;To do this you have 2 options:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Suppose we have a service which is returning shipping details array :&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-title function_&quot;&gt;getShippingPrices&lt;/span&gt;(): &lt;span class=&quot;hljs-title class_&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;IShippingDetails&lt;/span&gt;[]&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;http&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;get&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;IShippingDetails&lt;/span&gt;[]&amp;gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/assets/shipping.json&apos;&lt;/span&gt;);\n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;1. Use Async pipe&lt;/strong&gt; : Easy way when you just want to show the result in template&lt;/p&gt;\n&lt;p&gt;In the component class directly assign the observable to variable:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ShippingComponent&lt;/span&gt; implements &lt;span class=&quot;hljs-title class_&quot;&gt;OnInit&lt;/span&gt; {\n  shipOptions1 = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;cartService&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getShippingPrices&lt;/span&gt;();\n  &lt;span class=&quot;hljs-title function_&quot;&gt;constructor&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;private cartService: CartService&lt;/span&gt;) {}\n\n  &lt;span class=&quot;hljs-title function_&quot;&gt;ngOnInit&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {}\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;and then use async pipe in template :&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;div *ngFor=&lt;span class=&quot;hljs-string&quot;&gt;&quot;let s of shipOptions1 |async&quot;&lt;/span&gt;&amp;gt;\n  &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;{{s.type}}&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Refer: Check the 4th point in this URL\n&lt;a href=&quot;https://angular.io/start/start-data#configuring-the-shippingcomponent-to-use-cartservice&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://angular.io/start/start-data#configuring-the-shippingcomponent-to-use-cartservice&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;2. Use Subscribe&lt;/strong&gt; : When you want to manipulate it or want do some business logic on/from response&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ShippingComponent&lt;/span&gt; implements &lt;span class=&quot;hljs-title class_&quot;&gt;OnInit&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attr&quot;&gt;shipOptions2&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;IShippingDetails&lt;/span&gt;[] = [];\n  &lt;span class=&quot;hljs-title function_&quot;&gt;constructor&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;private cartService: CartService&lt;/span&gt;) {}\n\n  &lt;span class=&quot;hljs-title function_&quot;&gt;ngOnInit&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;cartService&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getShippingPrices&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt; =&amp;gt;&lt;/span&gt; {\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;shipOptions2&lt;/span&gt; = response;\n      &lt;span class=&quot;hljs-comment&quot;&gt;//console.log(this.myEvents);&lt;/span&gt;\n      &lt;span class=&quot;hljs-comment&quot;&gt;//All other code using shipOptions2&lt;/span&gt;\n    });\n  }\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can simply try this method-&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; headers = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Headers&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&apos;Accept&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;application/json&apos;&lt;/span&gt;});\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; options = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RequestOptions&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;headers&lt;/span&gt;: headers});\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;http&lt;/span&gt;\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;yourSearchUrlHere&lt;/span&gt;, options) &lt;span class=&quot;hljs-comment&quot;&gt;// the URL which you have defined&lt;/span&gt;\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;res&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n        res.&lt;span class=&quot;hljs-title function_&quot;&gt;json&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// using return res.json() will throw error&lt;/span&gt;\n    }\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;catch&lt;/span&gt;(err) =&amp;gt; {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;error&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;error&apos;&lt;/span&gt;);\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;that would be a good point to emphasize on the fact it is not possible to transform an asychronous operation to a synchrnous-one.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3633742/n00dl3&quot; title=&quot;20,556 reputation&quot; class=&quot;comment-user&quot;&gt;n00dl3&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment73883700_43055706&quot;&gt;&lt;span title=&quot;2017-04-14 13:30:05Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 14, 2017 at 13:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@n00dl3 Thanks for the tip! I&apos;ve tried to explain in the &quot;What you shouldn&apos;t do:&quot; section. Feel free to edit it.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5706293/eko&quot; title=&quot;37,708 reputation&quot; class=&quot;comment-user owner&quot;&gt;eko&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment73892644_43055706&quot;&gt;&lt;span title=&quot;2017-04-14 18:08:21Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 14, 2017 at 18:08&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Does this answer your question? &lt;a href=&quot;https://stackoverflow.com/questions/14220321/how-do-i-return-the-response-from-an-asynchronous-call&quot;&gt;How do I return the response from an asynchronous call?&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/215552/heretic-monkey&quot; title=&quot;11,096 reputation&quot; class=&quot;comment-user&quot;&gt;Heretic Monkey&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment108640594_43055706&quot;&gt;&lt;span title=&quot;2020-04-24 16:53:53Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 24, 2020 at 16:53&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@HereticMonkey that post is already credited in the answer&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5706293/eko&quot; title=&quot;37,708 reputation&quot; class=&quot;comment-user owner&quot;&gt;eko&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment108641723_43055706&quot;&gt;&lt;span title=&quot;2020-04-24 17:32:47Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 24, 2020 at 17:32&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@HereticMonkey yes it does, because it&apos;s framework specific, it&apos;s observables. When I duplicated angular/rxjs, async questions with that answer, people got confused and said &lt;code&gt;then&lt;/code&gt;ing the observable doesn&apos;t work; this is obvious for &lt;code&gt;angular&lt;/code&gt; answerers but not to you apparently. Also i thought it was enough to give the credit in the answer but i will change the question as well then.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5706293/eko&quot; title=&quot;37,708 reputation&quot; class=&quot;comment-user owner&quot;&gt;eko&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment108641985_43055706&quot;&gt;&lt;span title=&quot;2020-04-24 17:40:45Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 24, 2020 at 17:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;When a question is answered by the questioner at the exact same time of the post.. This is a good place to stop and write a blog post instead&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6936929/jonas-praem&quot; title=&quot;2,196 reputation&quot; class=&quot;comment-user&quot;&gt;Jonas Praem&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment94630594_43055707&quot;&gt;&lt;span title=&quot;2018-12-21 23:39:21Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 21, 2018 at 23:39&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@JonasPraem True, but there is nothing wrong in sharing the knowledge on Stackoverflow. As you see the number of votes, it did help many people here and it will continue to do so.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2079900/amit-chigadani&quot; title=&quot;26,118 reputation&quot; class=&quot;comment-user&quot;&gt;Amit Chigadani&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment94654307_43055707&quot;&gt;&lt;span title=&quot;2018-12-23 15:33:27Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 23, 2018 at 15:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;My question was somewhat similar. But this answer solved that too. :-)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/11163977/tanzeel&quot; title=&quot;3,136 reputation&quot; class=&quot;comment-user&quot;&gt;Tanzeel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment112350596_43055707&quot;&gt;&lt;span title=&quot;2020-08-22 12:19:34Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 22, 2020 at 12:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;And (!) with this implementation one doesn&apos;t need to unsubscribe the Subscription: &lt;a href=&quot;https://medium.com/@sub.metu/angular-how-to-avoid-memory-leaks-from-subscriptions-8fa925003aa9&quot; rel=&quot;nofollow noreferrer&quot;&gt;medium.com/@sub.metu/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1649048/san-jay-falcon&quot; title=&quot;971 reputation&quot; class=&quot;comment-user&quot;&gt;San Jay Falcon&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment94028868_48856491&quot;&gt;&lt;span title=&quot;2018-12-02 17:27:59Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 2, 2018 at 17:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@SanJayFalcon Since this is a http request, there is no need for unsubscription.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6294072/at82&quot; title=&quot;67,880 reputation&quot; class=&quot;comment-user&quot;&gt;AT82&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment98255073_48856491&quot;&gt;&lt;span title=&quot;2019-04-22 10:36:56Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 22, 2019 at 10:36&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":226,"title":"How do I return the response from an Observable/http/async call in angular?","content":"\n                \n&lt;p&gt;I have service which returns an observable which does an http request to my server and gets the data. I want to use this data but I always end up getting &lt;code&gt;undefined&lt;/code&gt;. What&apos;s the problem?&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Service&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;@&lt;span class=&quot;hljs-title class_&quot;&gt;Injectable&lt;/span&gt;()\n&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;EventService&lt;/span&gt; {\n\n  &lt;span class=&quot;hljs-title function_&quot;&gt;constructor&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;private http: Http&lt;/span&gt;) { }\n\n  &lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;(): &lt;span class=&quot;hljs-title class_&quot;&gt;Observable&lt;/span&gt;&amp;lt;any&amp;gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; headers = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Headers&lt;/span&gt;({ &lt;span class=&quot;hljs-string&quot;&gt;&apos;Content-Type&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;application/json&apos;&lt;/span&gt; });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; options = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RequestOptions&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;headers&lt;/span&gt;: headers });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;http&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://localhost:9999/events/get&quot;&lt;/span&gt;, options)\n                .&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;res&lt;/span&gt;)=&amp;gt;&lt;/span&gt; res.&lt;span class=&quot;hljs-title function_&quot;&gt;json&lt;/span&gt;())\n                .&lt;span class=&quot;hljs-title function_&quot;&gt;catch&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;err&lt;/span&gt;)=&amp;gt;&lt;/span&gt; err)\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Component:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;@&lt;span class=&quot;hljs-title class_&quot;&gt;Component&lt;/span&gt;({...})\n&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;EventComponent&lt;/span&gt; {\n\n  &lt;span class=&quot;hljs-attr&quot;&gt;myEvents&lt;/span&gt;: any;\n\n  &lt;span class=&quot;hljs-title function_&quot;&gt;constructor&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; private es: EventService &lt;/span&gt;) { }\n\n  &lt;span class=&quot;hljs-title function_&quot;&gt;ngOnInit&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;es&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getEventList&lt;/span&gt;()\n        .&lt;span class=&quot;hljs-title function_&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;)=&amp;gt;&lt;/span&gt;{\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt; = response;\n        });\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myEvents&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//This prints undefined!&lt;/span&gt;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I checked &lt;a href=&quot;https://stackoverflow.com/questions/14220321/how-do-i-return-the-response-from-an-asynchronous-call&quot;&gt;How do I return the response from an asynchronous call?&lt;/a&gt; post but couldn&apos;t find a solution&lt;/p&gt;\n    ","slug":"how-do-i-return-the-response-from-an-observablehttpasync-call-in-angular-1657387335024","postType":"QUESTION","createdAt":"2022-07-09T17:22:15.000Z","updatedAt":"2022-07-09T17:22:15.000Z","tags":[{"id":1531,"name":"angular","slug":"angular","createdAt":"2022-07-09T17:22:15.000Z","updatedAt":"2022-07-09T17:22:15.000Z","Questions_Tags":{"questionId":226,"tagId":1531}},{"id":1533,"name":"typescript","slug":"typescript","createdAt":"2022-07-09T17:22:15.000Z","updatedAt":"2022-07-09T17:22:15.000Z","Questions_Tags":{"questionId":226,"tagId":1533}},{"id":1534,"name":"observable","slug":"observable","createdAt":"2022-07-09T17:22:15.000Z","updatedAt":"2022-07-09T17:22:15.000Z","Questions_Tags":{"questionId":226,"tagId":1534}}]}},"__N_SSG":true}