{"pageProps":{"data":{"answer":["\n&lt;p&gt;&lt;a href=&quot;http://api.jquery.com/serializeArray/&quot; rel=&quot;noreferrer&quot;&gt;serializeArray&lt;/a&gt; already does exactly that. You just need to massage the data into your required format:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;objectifyForm&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;formArray&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//serialize data function&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; returnArray = {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; formArray.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++){\n        returnArray[formArray[i][&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;]] = formArray[i][&lt;span class=&quot;hljs-string&quot;&gt;&apos;value&apos;&lt;/span&gt;];\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; returnArray;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Watch out for hidden fields which have the same name as real inputs as they will get overwritten.&lt;/p&gt;\n    ","\n&lt;h1&gt;Convert forms to JSON &lt;em&gt;like a boss&lt;/em&gt;&lt;/h1&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;The current source is &lt;a href=&quot;https://github.com/macek/jquery-serialize-object&quot; rel=&quot;noreferrer&quot;&gt;on GitHub&lt;/a&gt; and &lt;a href=&quot;https://bower.io/&quot; rel=&quot;noreferrer&quot;&gt;Bower&lt;/a&gt;.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;$ bower install jquery-serialize-object&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;The following code is now &lt;strong&gt;deprecated&lt;/strong&gt;.&lt;/h3&gt;\n\n&lt;p&gt;The following code can take work with all sorts of input names; and handle them just as you&apos;d expect.&lt;/p&gt;\n\n&lt;p&gt;For example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;!-- &lt;span class=&quot;hljs-title class_&quot;&gt;All&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; these will work! --&amp;gt;\n&amp;lt;input name=&quot;honey[badger]&quot; value=&quot;a&quot;&amp;gt;\n&amp;lt;input name=&quot;wombat[]&quot; value=&quot;b&quot;&amp;gt;\n&amp;lt;input name=&quot;hello[panda][]&quot; value=&quot;c&quot;&amp;gt;\n&amp;lt;input name=&quot;animals[0][name]&quot; value=&quot;d&quot;&amp;gt;\n&amp;lt;input name=&quot;animals[0][breed]&quot; value=&quot;e&quot;&amp;gt;\n&amp;lt;input name=&quot;crazy[1][][wonky]&quot; value=&quot;f&quot;&amp;gt;\n&amp;lt;input name=&quot;dream[as][vividly][as][you][can]&quot; value=&quot;g&quot;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Output&lt;/span&gt;\n{\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;honey&quot;&lt;/span&gt;:{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;badger&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;\n  },\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;wombat&quot;&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;],\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;:{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;panda&quot;&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;]\n  },\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;animals&quot;&lt;/span&gt;:[\n    {\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;d&quot;&lt;/span&gt;,\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;breed&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;e&quot;&lt;/span&gt;\n    }\n  ],\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;crazy&quot;&lt;/span&gt;:[\n    &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;,\n    [\n      {&lt;span class=&quot;hljs-string&quot;&gt;&quot;wonky&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;f&quot;&lt;/span&gt;}\n    ]\n  ],\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;dream&quot;&lt;/span&gt;:{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;as&quot;&lt;/span&gt;:{\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;vividly&quot;&lt;/span&gt;:{\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;as&quot;&lt;/span&gt;:{\n          &lt;span class=&quot;hljs-string&quot;&gt;&quot;you&quot;&lt;/span&gt;:{\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;can&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;g&quot;&lt;/span&gt;\n          }\n        }\n      }\n    }\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Usage&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#my-form&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeObject&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;The Sorcery (JavaScript)&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;$&lt;/span&gt;){\n    $.fn.&lt;span class=&quot;hljs-property&quot;&gt;serializeObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; self = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;,\n            json = {},\n            push_counters = {},\n            patterns = {\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;validate&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-regexp&quot;&gt;/^[a-zA-Z][a-zA-Z0-9_]*(?:\\[(?:\\d*|[a-zA-Z0-9_]+)\\])*$/&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;:      &lt;span class=&quot;hljs-regexp&quot;&gt;/[a-zA-Z0-9_]+|(?=\\[\\])/g&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;push&quot;&lt;/span&gt;:     &lt;span class=&quot;hljs-regexp&quot;&gt;/^$/&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;fixed&quot;&lt;/span&gt;:    &lt;span class=&quot;hljs-regexp&quot;&gt;/^\\d+$/&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;named&quot;&lt;/span&gt;:    &lt;span class=&quot;hljs-regexp&quot;&gt;/^[a-zA-Z0-9_]+$/&lt;/span&gt;\n            };\n\n\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;build&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;base, key, value&lt;/span&gt;){\n            base[key] = value;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; base;\n        };\n\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;push_counter&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(push_counters[key] === &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;){\n                push_counters[key] = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; push_counters[key]++;\n        };\n\n        $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;($(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;(), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Skip invalid keys&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!patterns.&lt;span class=&quot;hljs-property&quot;&gt;validate&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;)){\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n            }\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; k,\n                keys = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(patterns.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;),\n                merge = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;,\n                reverse_key = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;((k = keys.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;()) !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;){\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Adjust reverse_key&lt;/span&gt;\n                reverse_key = reverse_key.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\[&quot;&lt;/span&gt; + k + &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\]$&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Push&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(k.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(patterns.&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;)){\n                    merge = self.&lt;span class=&quot;hljs-title function_&quot;&gt;build&lt;/span&gt;([], self.&lt;span class=&quot;hljs-title function_&quot;&gt;push_counter&lt;/span&gt;(reverse_key), merge);\n                }\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Fixed&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(k.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(patterns.&lt;span class=&quot;hljs-property&quot;&gt;fixed&lt;/span&gt;)){\n                    merge = self.&lt;span class=&quot;hljs-title function_&quot;&gt;build&lt;/span&gt;([], k, merge);\n                }\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Named&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(k.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(patterns.&lt;span class=&quot;hljs-property&quot;&gt;named&lt;/span&gt;)){\n                    merge = self.&lt;span class=&quot;hljs-title function_&quot;&gt;build&lt;/span&gt;({}, k, merge);\n                }\n            }\n\n            json = $.&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;, json, merge);\n        });\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; json;\n    };\n})(jQuery);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;What&apos;s wrong with: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = {};\n$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.form-selector&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){data[x.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = x.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;}); \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A fixed version of Tobias Cohen&apos;s solution. This one correctly handles falsy values like &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;&apos;&apos;&lt;/code&gt;. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;jQuery.&lt;span class=&quot;hljs-property&quot;&gt;fn&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;serializeObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrayData, objectData;\n  arrayData = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;();\n  objectData = {};\n\n  $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(arrayData, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n      value = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      value = &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;) {\n        objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = [objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;]];\n      }\n\n      objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(value);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = value;\n    }\n  });\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; objectData;\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And a CoffeeScript version for your coding convenience:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;jQuery.&lt;span class=&quot;hljs-property&quot;&gt;fn&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;serializeObject&lt;/span&gt; = -&amp;gt;\n  arrayData = @&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;()\n  objectData = {}\n\n  $.each arrayData, -&amp;gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; @value?\n      value = @value\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n      value = &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; objectData[@name]?\n      unless objectData[@name].&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;\n        objectData[@name] = [objectData[@name]]\n\n      objectData[@name].&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt; value\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n      objectData[@name] = value\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; objectData\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I like using &lt;code&gt;Array.prototype.reduce&lt;/code&gt; because it&apos;s a one-liner, and it doesn&apos;t rely on &lt;a href=&quot;https://en.wikipedia.org/wiki/Underscore.js&quot;&gt;Underscore.js&lt;/a&gt; or the like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#formid&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;()\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, x&lt;/span&gt;) { a[x.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = x.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;; &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a; }, {});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is similar to the answer using &lt;code&gt;Array.prototype.map&lt;/code&gt;, but you don&apos;t need to clutter up your scope with an additional object variable. One-stop shopping.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE&lt;/strong&gt;: Forms with inputs that have duplicate &lt;code&gt;name&lt;/code&gt; attributes are valid HTML, and is actually a common approach. Using any of the answers in this thread will be inappropriate in that case (since object keys must be unique).&lt;/p&gt;\n    ","\n&lt;h1&gt;[UPDATE 2020]&lt;/h1&gt;\n\n&lt;p&gt;With a simple oneliner in vanilla js that leverages &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries&quot; rel=&quot;noreferrer&quot;&gt;fromEntries&lt;/a&gt; (as always, check browser support):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;fromEntries&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(form))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;All of these answers seemed so over the top to me. There&apos;s something to be said for simplicity. As long as all your form inputs have the name attribute set this should work just jim dandy.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form.myform&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;submit&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $this = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;)\n    , viewArr = $this.&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;()\n    , view = {};\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; viewArr) {\n    view[viewArr[i].&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = viewArr[i].&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n  }\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;//Do stuff with view object here (e.g. JSON.stringify?)&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;There really is no way to do this without examining each of the elements.  What you really want to know is &quot;has someone else already written a method that converts a form to a JSON object?&quot;   Something like the following should work -- note that it will only give you the form elements that would be returned via a POST (must have a name).  This is &lt;strong&gt;not tested&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;formToJSON&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; selector &lt;/span&gt;)\n{\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; form = {};\n     $(selector).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;:input[name]:enabled&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n         &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; self = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n         &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; name = self.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;);\n         &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (form[name]) {\n            form[name] = form[name] + &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt; + self.&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n         }\n         &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            form[name] = self.&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n         }\n     });\n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; form;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I checked that there is a problem with all the other answers, that if the input name is as an array, such as &lt;code&gt;name[key]&lt;/code&gt;, then it should be generated like this:&lt;/p&gt;\n\n&lt;h2&gt;&lt;code&gt;name:{ key : value }&lt;/code&gt;&lt;/h2&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;For example:&lt;/strong&gt; If you have an HTML form similar to the one below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1[key1]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value1&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name2[key2]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value2&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name3[key3]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value3&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But it should be generated just like the JSON below, and does not become an object like the following with all the other answers. So if anyone wants to bring something like the following JSON, try the JS code below.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n    name  &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &apos;value&apos;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    name1 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt; key1 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &apos;value1&apos; &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    name2 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt; key2 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &apos;value2&apos; &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    name3 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt; key2 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &apos;value2&apos; &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.fn.&lt;span class=&quot;hljs-property&quot;&gt;getForm2obj&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _ = {};\n  $.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;(), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; keys = n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[a-zA-Z0-9_]+|(?=\\[\\])/g&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (keys.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; tmp = _;\n      pop = keys.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;();\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; keys.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;, j = keys[i]; i++) {\n        tmp[j] = (!tmp[j] ? (pop == &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) ? [] : {} : tmp[j]), tmp = tmp[j];\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (pop == &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) tmp = (!&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(tmp) ? [] : tmp), tmp.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; tmp[pop] = n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; _[keys.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;()] = n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n  });\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _;\n}\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;getForm2obj&lt;/span&gt;());\n$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form input&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;clear&lt;/span&gt;();\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;getForm2obj&lt;/span&gt;());\n});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://code.jquery.com/jquery-3.2.1.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1[]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;checked&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checked&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1[]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;2\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1[]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;gender&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;male&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;checked&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checked&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;male\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;gender&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;female&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; female\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name2[key1]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;one[another][another_one]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name3[1][name]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name3[2][name]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;[]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value5&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;If you are using &lt;a href=&quot;https://en.wikipedia.org/wiki/Underscore.js&quot;&gt;Underscore.js&lt;/a&gt; you can use the relatively concise:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;_.&lt;span class=&quot;hljs-title function_&quot;&gt;object&lt;/span&gt;(_.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#myform&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;(), _.&lt;span class=&quot;hljs-property&quot;&gt;values&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Ok, I know this already has a highly upvoted answer, but another &lt;a href=&quot;https://stackoverflow.com/questions/3277655/how-to-convert-jquery-serialize-data-to-json-object/3277710#3277710&quot;&gt;similar question was asked&lt;/a&gt; recently, and I was directed to this question as well.  I&apos;d like to offer my solution as well, because it offers an advantage over the accepted solution:  You can include disabled form elements (which is sometimes important, depending on how your UI functions)&lt;/p&gt;\n\n&lt;p&gt;Here is my answer from the &lt;a href=&quot;https://stackoverflow.com/questions/3277655/how-to-convert-jquery-serialize-data-to-json-object/3277710#3277710&quot;&gt;other SO question&lt;/a&gt;:&lt;/p&gt;\n\n&lt;p&gt;Initially, we were using jQuery&apos;s &lt;code&gt;serializeArray()&lt;/code&gt; method, but that does not include form elements that are disabled.  We will often disable form elements that are &quot;sync&apos;d&quot; to other sources on the page, but we still need to include the data in our serialized object.  So &lt;code&gt;serializeArray()&lt;/code&gt; is out.  We used the &lt;code&gt;:input&lt;/code&gt; selector to get all input elements (both enabled and disabled) in a given container, and then &lt;code&gt;$.map()&lt;/code&gt; to create our object.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; inputs = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#container :input&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = $.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(inputs, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, i&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {};\n    o[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = $(n).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n});\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(obj);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that for this to work, each of your inputs will need a &lt;code&gt;name&lt;/code&gt; attribute, which will be the name of the property of the resulting object.&lt;/p&gt;\n\n&lt;p&gt;That is actually slightly modified from what we used.  We needed to create an object that was structured as a .NET IDictionary, so we used this: (I provide it here in case it&apos;s useful)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = $.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(inputs, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, i&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; { &lt;span class=&quot;hljs-title class_&quot;&gt;Key&lt;/span&gt;: n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: $(n).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;() };\n});\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(obj);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I like both of these solutions, because they are simple uses of the &lt;code&gt;$.map()&lt;/code&gt; function, and you have complete control over your selector (so, which elements you end up including in your resulting object).  Also, no extra plugin required.  Plain old jQuery.&lt;/p&gt;\n    ","\n&lt;p&gt;This function should handle multidimensional arrays along with multiple elements with the same name. &lt;/p&gt;\n\n&lt;p&gt;I&apos;ve been using it for a couple years so far:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;jQuery.&lt;span class=&quot;hljs-property&quot;&gt;fn&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;serializeJSON&lt;/span&gt;=&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; json = {};\n  jQuery.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;jQuery&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;(), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, i&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _ = n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (_ &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = json;\n      _name = n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\]/gi&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[&apos;&lt;/span&gt;);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, len=_name.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i&amp;lt;len; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == len-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (o[_name[i]]) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; o[_name[i]] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt;) {\n              o[_name[i]] = [o[_name[i]]];\n            }\n            o[_name[i]].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;);\n          }\n          &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; o[_name[i]] = n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; || &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; o = o[_name[i]] = o[_name[i]] || {};\n      }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;) {\n          json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = [json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;]];\n        }\n        json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; || &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; || &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;      \n    }\n  });\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; json;\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; frm = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myform&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(frm.&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;em&gt;&lt;a href=&quot;http://www.json.org/&quot; rel=&quot;noreferrer&quot;&gt;JSON&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;One-liner (no dependencies other than jQuery), uses fixed object binding for function passsed to &lt;code&gt;map&lt;/code&gt; method. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[x.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = x.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;; &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;}.&lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;({}))[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What it does?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;id=2&amp;amp;value=1&amp;amp;comment=ok&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt; { &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;comment&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;ok&quot;&lt;/span&gt; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;suitable for progressive web apps (one can easily support both regular form submit action as well as ajax requests)&lt;/p&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;form_to_json&lt;/span&gt; (selector) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ary = $(selector).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = {};\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; a &amp;lt; ary.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; a++) obj[ary[a].&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = ary[a].&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{&lt;span class=&quot;hljs-string&quot;&gt;&quot;myfield&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;myfield value&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;passwordfield&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;mypasswordvalue&quot;&lt;/span&gt;}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;From some &lt;a href=&quot;https://stackoverflow.com/a/17784656/1197775&quot;&gt;older&lt;/a&gt; answer:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form input, form select&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;toArray&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;m,e&lt;/span&gt;){m[e.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = $(e).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;(); &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; m;},{})\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I found a problem with Tobias Cohen&apos;s code (I don&apos;t have enough points to comment on it directly), which otherwise works for me. If you have two select options with the same name, both with value=&quot;&quot;, the original code will produce &quot;name&quot;:&quot;&quot; instead of &quot;name&quot;:[&quot;&quot;,&quot;&quot;]&lt;/p&gt;\n\n&lt;p&gt;I think this can fixed by adding &quot; || o[this.name] == &apos;&apos;&quot; to the first if condition:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.fn.&lt;span class=&quot;hljs-property&quot;&gt;serializeObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;();\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(a, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] || o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;) {\n                o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = [o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;]];\n            }\n            o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; || &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; || &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n        }\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Simplicity is best here. I&apos;ve used a simple string replace with a regular expression, and they worked like a charm thus far. I am not a regular expression expert, but I bet you can even populate very complex objects.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; values = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serialize&lt;/span&gt;(),\nattributes = {};\n\nvalues.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/([^&amp;amp;]+)=([^&amp;amp;]*)/g&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;match, name, value&lt;/span&gt;) {\n    attributes[name] = value;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(form);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; formDataJSON = {};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; [key, value] &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; formData.&lt;span class=&quot;hljs-title function_&quot;&gt;entries&lt;/span&gt;()) {\n\n    formDataJSON[key] = value;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Using &lt;a href=&quot;https://stackoverflow.com/questions/1184624/convert-form-data-to-javascript-object-with-jquery/8407771#8407771&quot;&gt;maček&apos;s solution&lt;/a&gt;, I modified it to work with the way ASP.NET MVC handles their nested/complex objects on the same form. All you have to do is modify the validate piece to this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;validate&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-regexp&quot;&gt;/^[a-zA-Z][a-zA-Z0-9_]*((?:\\[(?:\\d*|[a-zA-Z0-9_]+)\\])*(?:\\.)[a-zA-Z][a-zA-Z0-9_]*)*$/&lt;/span&gt;,\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will match and then correctly map elements with names like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;zooName&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;zooAnimals[0].name&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;There is a plugin to do just that for jQuery, &lt;em&gt;&lt;a href=&quot;https://github.com/marioizquierdo/jquery.serializeJSON&quot; rel=&quot;nofollow&quot;&gt;jquery.serializeJSON&lt;/a&gt;&lt;/em&gt;. I have used it successfully on a few projects now. It works like a charm. &lt;/p&gt;\n    ","\n&lt;p&gt;the simplest and most accurate way i found for this problem was to use &lt;a href=&quot;http://benalman.com/projects/jquery-bbq-plugin/&quot; rel=&quot;nofollow noreferrer&quot;&gt;bbq plugin&lt;/a&gt; or this &lt;a href=&quot;https://github.com/chrissrogers/jquery-deparam&quot; rel=&quot;nofollow noreferrer&quot;&gt;one&lt;/a&gt; (which is about 0.5K bytes size).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;it also works with multi dimensional arrays.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.fn.&lt;span class=&quot;hljs-property&quot;&gt;serializeObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n\t&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $.&lt;span class=&quot;hljs-title function_&quot;&gt;deparam&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;serialize&lt;/span&gt;());\n};&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Another answer&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; form = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;) || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form[name=&quot;userprofile&quot;]&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; json = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(form)).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e,i&lt;/span&gt;) {&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[e[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]]=e[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]; &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;}.&lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;({}))[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n    \n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(json)\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#asJSON&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(json);\n  }, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n})&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;userprofile&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;form&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Name &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;firstname&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;John&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Family name &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;lastname&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Smith&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Work &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;employment[name]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inc, Inc.&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Works since &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;employment[since]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2017&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Photo &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Send &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\nJSON: &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;textarea&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;asJSON&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;textarea&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;FormData: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FormData&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/FormData&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I prefer this approach because: you don&apos;t have to iterate over 2 collections, you can get at things other than &quot;name&quot; and &quot;value&quot; if you need to, and you can sanitize your values before you store them in the object (if you have default values that you don&apos;t wish to store, for example).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.formObject = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;$o&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {},\n        real_value = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;$field&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; val = $field.&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;() || &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// additional cleaning here, if needed&lt;/span&gt;\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; val;\n        };\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; o != &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;) {\n        $o = $(o);\n    }\n\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;:input[name]&quot;&lt;/span&gt;, $o).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i, field&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $field = $(field),\n            name = $field.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;),\n            value = &lt;span class=&quot;hljs-title function_&quot;&gt;real_value&lt;/span&gt;($field);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (o[name]) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!$.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(o[name])) {\n                o[name] = [o[name]];\n            }\n\n            o[name].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(value);\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            o[name] = value;\n        }\n    });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Use like so:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = $.&lt;span class=&quot;hljs-title function_&quot;&gt;formObject&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#someForm&quot;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Only tested in Firefox.&lt;/p&gt;\n    ","\n&lt;p&gt;Here&apos;s a one-liner using &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce&quot; rel=&quot;nofollow noreferrer&quot;&gt;reduce&lt;/a&gt;&lt;/strong&gt;.  Reduce is a functional function that takes the return value of the passed function and passes it back to the passed function in the next iteration, along with the nth value from the list.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#formid&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o,p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({...o, [p.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;]: p.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;}))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;We have to use a few of tricks to get this to work:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;...o&lt;/code&gt; (spread syntax) inserts all the &lt;code&gt;key: value&lt;/code&gt; pairs from &lt;code&gt;o&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Wrap the object we are returning in &lt;code&gt;()&lt;/code&gt; to distinguish it from the &lt;code&gt;{}&lt;/code&gt; that denote a function&lt;/li&gt;\n&lt;li&gt;Wrap the key (&lt;code&gt;p.name&lt;/code&gt;) in &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;Taking advantage of ES6 goodness in a one liner:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;form&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o, {name: n, value: v}&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(o, { [n]: v }), {});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I like samuels version, but I believe it has a small error. Normally JSON is sent as&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;{&quot;coreSKU&quot;:&quot;PCGUYJS&quot;,&quot;name_de&quot;:&quot;whatever&quot;,...&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;NOT as&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;[{&quot;coreSKU&quot;:&quot;PCGUYJS&quot;},{&quot;name_de&quot;:&quot;whatever&quot;},...&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;so the function IMO should read:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;App&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toJson&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; selector &lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {};\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;( $( selector ), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; n,i &lt;/span&gt;)\n    {\n        o[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = $(n).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n    });     \n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and to wrap it in data array (as commonly expected, too), and finally send it as astring\nApp.stringify( {data:App.toJson( &apos;#cropform :input&apos; )} )&lt;/p&gt;\n\n&lt;p&gt;For the stringify look at &lt;a href=&quot;https://stackoverflow.com/questions/3593046&quot;&gt;Question 3593046&lt;/a&gt; for the lean version, at &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot; rel=&quot;nofollow noreferrer&quot;&gt;json2.js&lt;/a&gt; for the every-eventuality-covered version. That should cover it all :)&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Turn anything into an object (not unit tested)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;\nstring = {};\n\nstring.&lt;span class=&quot;hljs-property&quot;&gt;repeat&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;string, count&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(count+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(string);\n}\n\nstring.&lt;span class=&quot;hljs-property&quot;&gt;count&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;string&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; count = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; results = string.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[i], &lt;span class=&quot;hljs-string&quot;&gt;&apos;g&apos;&lt;/span&gt;));\n        count += results ? results.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; count;\n}\n\narray = {};\n\narray.&lt;span class=&quot;hljs-property&quot;&gt;merge&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr1, arr2&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; arr2)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arr1[i] &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; arr1[i] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; arr2[i] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt;)\n            arr1[i] = array.&lt;span class=&quot;hljs-title function_&quot;&gt;merge&lt;/span&gt;(arr1[i], arr2[i]);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n            arr1[i] = arr2[i]\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr1;\n}\n\narray.&lt;span class=&quot;hljs-property&quot;&gt;print&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [];\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(obj, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, val&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; next = key + &lt;span class=&quot;hljs-string&quot;&gt;&quot;: &quot;&lt;/span&gt;;\n        next += $.&lt;span class=&quot;hljs-title function_&quot;&gt;isPlainObject&lt;/span&gt;(val) ? array.&lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(val) : val;\n        arr.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;( next );\n      });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;{ &quot;&lt;/span&gt; +  arr.&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;, &quot;&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&quot; }&quot;&lt;/span&gt;;\n}\n\nnode = {};\n\nnode.&lt;span class=&quot;hljs-property&quot;&gt;objectify&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;node, params&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!params)\n        params = {};\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!params.&lt;span class=&quot;hljs-property&quot;&gt;selector&lt;/span&gt;)\n        params.&lt;span class=&quot;hljs-property&quot;&gt;selector&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!params.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;)\n        params.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!params.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;)\n        params.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; indexes = {};\n\n    $(node).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(params.&lt;span class=&quot;hljs-property&quot;&gt;selector&lt;/span&gt;+&lt;span class=&quot;hljs-string&quot;&gt;&quot;[&quot;&lt;/span&gt;+params.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;+&lt;span class=&quot;hljs-string&quot;&gt;&quot;]&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; name = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(params.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;),\n            value = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(params.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = $.&lt;span class=&quot;hljs-title function_&quot;&gt;parseJSON&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{&quot;&lt;/span&gt;+name.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/([^\\[]*)/&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;+&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;;\n        }).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\[(.*?)\\]/gi&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n            {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]);\n                indexes[index] = indexes[index] !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt; ? indexes[index]+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;:{&quot;&apos;&lt;/span&gt;+indexes[index]+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;:{&quot;&apos;&lt;/span&gt;+&lt;span class=&quot;hljs-built_in&quot;&gt;escape&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;;\n        })+&lt;span class=&quot;hljs-string&quot;&gt;&apos;:&quot;&apos;&lt;/span&gt;+value.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[\\\\&quot;]/gi&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\&quot;&lt;/span&gt;+&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]; \n        })+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;+string.&lt;span class=&quot;hljs-title function_&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;}&apos;&lt;/span&gt;, string.&lt;span class=&quot;hljs-title function_&quot;&gt;count&lt;/span&gt;(name, &lt;span class=&quot;hljs-string&quot;&gt;&apos;]&apos;&lt;/span&gt;))+&lt;span class=&quot;hljs-string&quot;&gt;&quot;}&quot;&lt;/span&gt;);\n\n        o = array.&lt;span class=&quot;hljs-title function_&quot;&gt;merge&lt;/span&gt;(o, obj);\n    });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n}\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The output of test:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(array.&lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(node.&lt;span class=&quot;hljs-title function_&quot;&gt;objectify&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;form&quot;&lt;/span&gt;), {})));\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(array.&lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(node.&lt;span class=&quot;hljs-title function_&quot;&gt;objectify&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;form&quot;&lt;/span&gt;), {&lt;span class=&quot;hljs-attr&quot;&gt;selector&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;select&quot;&lt;/span&gt;})));\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;on&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;form&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;input[a]&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;input[b]&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;select&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;otherinput[c][a]&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;otherinput[c][]&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;otherinput[d][b]&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;otherinput[c][]&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;hidden&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;anotherinput&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;hidden&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;hidden&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;anotherinput&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;submit&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;submit&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/form&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;will yield:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{ &lt;span class=&quot;hljs-attr&quot;&gt;input&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: text, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: select }, &lt;span class=&quot;hljs-attr&quot;&gt;otherinput&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: a, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;: b, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;: d }, &lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: c } }, &lt;span class=&quot;hljs-attr&quot;&gt;anotherinput&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; }\n{ &lt;span class=&quot;hljs-attr&quot;&gt;input&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: select } }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For a quick, modern solution, use the &lt;a href=&quot;https://github.com/kushalpandya/JSONify&quot; rel=&quot;nofollow&quot;&gt;JSONify&lt;/a&gt; jQuery plugin. The example below is taken verbatim from the GitHub README. All credit to Kushal Pandya, author of the plugin.&lt;/p&gt;\n\n&lt;p&gt;Given:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;form id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;myform&quot;&lt;/span&gt;&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;Name:&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;Email&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;email&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;Password&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/form&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Running:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#myform&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;jsonify&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Produces:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Joe User&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;email&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;joe@example.com&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;mypass&quot;&lt;/span&gt;}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want to do a jQuery POST with this JSON object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#mybutton&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;post&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/api/user&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#myform&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;jsonify&lt;/span&gt;()));\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I found a problem with the selected solution.&lt;/p&gt;\n\n&lt;p&gt;When using forms that have array based names the jQuery serializeArray() function actually dies.&lt;/p&gt;\n\n&lt;p&gt;I have a PHP framework that uses array-based field names to allow for the same form to be put onto the same page multiple times in multiple views. This can be handy to put both add, edit and delete on the same page without conflicting form models.&lt;/p&gt;\n\n&lt;p&gt;Since I wanted to seralize the forms without having to take this absolute base functionality out I decided to write my own seralizeArray():&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $vals = {};\n\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#video_edit_form input&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; name = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/editSingleForm\\[/i&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n\n            name = name.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\]/i&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt;($(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;)){\n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt;:\n                    $vals[name] = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt;:\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;($(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;checked&quot;&lt;/span&gt;)){\n                        $vals[name] = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n                    }\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;radio&quot;&lt;/span&gt;:\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;($(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;checked&quot;&lt;/span&gt;)){\n                        $vals[name] = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n                    }\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                &lt;span class=&quot;hljs-attr&quot;&gt;default&lt;/span&gt;:\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            }\n        });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Please note: This also works outside of form submit() so if an error occurs in the rest of your code the form won&apos;t submit if you place on a link button saying &quot;save changes&quot;.&lt;/p&gt;\n\n&lt;p&gt;Also note that this function should never be used to validate the form only to gather the data to send to the server-side for validation. Using such weak and mass-assigned code WILL cause &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-site_scripting&quot; rel=&quot;nofollow&quot;&gt;XSS&lt;/a&gt;, etc.&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;because the first returns a string, exactly like what you&apos;d get if you submitted the form with a GET method, and the second gives you a array of objects, each with a name value pair. I want that if i have a field named &quot;email&quot; i get an object that will allow me to retrieve that value with obj.email. With serializeArray(), i&apos;d have to do something like obj[indexOfElement].value&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/35091/yisroel&quot; title=&quot;8,164 reputation&quot; class=&quot;comment-user owner&quot;&gt;Yisroel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment1006483_1184624&quot;&gt;&lt;span title=&quot;2009-07-26 14:05:15Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jul 26, 2009 at 14:05&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Do you mean &quot;why use serializeArray to get the data in the first place?&quot; Because serializeArray is already written, is unit tested in multiple browsers, and could theoretically be improved in later versions of jQuery. The less code you write that has to access inconsistent things like DOM elements directly, the more stable your code will be.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/66617/tobias-cohen&quot; title=&quot;19,705 reputation&quot; class=&quot;comment-user&quot;&gt;Tobias Cohen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment1014239_1186309&quot;&gt;&lt;span title=&quot;2009-07-28 03:05:06Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jul 28, 2009 at 3:05&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Be warned, serializeArray() will not include disabled elements.  I often disable input elements that are sync&apos;d to other elements on the page, but I still want them included in my serialized object.  You&apos;re better off using something like &lt;code&gt;$.map( $(&quot;#container :input&quot;), function(n, i) { /* n.name and $(n).val() */ } );&lt;/code&gt; if you need to include disabled elements.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/23886/samuel-meacham&quot; title=&quot;10,075 reputation&quot; class=&quot;comment-user&quot;&gt;Samuel Meacham&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment3391992_1186309&quot;&gt;&lt;span title=&quot;2010-07-18 23:54:44Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jul 18, 2010 at 23:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;So, that works pretty well.  But it&apos;s misnamed: it doesn&apos;t return JSON, as the name implies.  Instead, it returns an object literal. Also, it&apos;s important to check for hasOwnProperty, otherwise your arrays have anything that&apos;s attached to their prototype, like: {numbers: [&quot;1&quot;, &quot;3&quot;, indexOf: function(){...}]}&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/167422/frontendbeauty&quot; title=&quot;2,009 reputation&quot; class=&quot;comment-user&quot;&gt;frontendbeauty&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment10765680_8407771&quot;&gt;&lt;span title=&quot;2011-12-29 00:44:02Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 29, 2011 at 0:44&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;code&gt;$(this).serializeArray().reduce(function(m,o){  m[o.name] = o.value; return m;}, {})&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1197775/sites&quot; title=&quot;20,767 reputation&quot; class=&quot;comment-user&quot;&gt;sites&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment49693020_17784656&quot;&gt;&lt;span title=&quot;2015-06-13 21:19:00Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 13, 2015 at 21:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;code&gt;$(this).serializeArray().reduce((o,kv) =&amp;gt; ({...o, [kv.name]: kv.value}), {})&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6084517/nathan-chappell&quot; title=&quot;1,666 reputation&quot; class=&quot;comment-user&quot;&gt;Nathan Chappell&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment121325581_17784656&quot;&gt;&lt;span title=&quot;2021-08-04 12:48:37Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 4, 2021 at 12:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;this is the one row solution, though others work too.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4444742/alex&quot; title=&quot;415 reputation&quot; class=&quot;comment-user&quot;&gt;alex&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123943775_17784656&quot;&gt;&lt;span title=&quot;2021-11-25 17:05:40Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 25, 2021 at 17:05&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;You mean other than the fact that this doesn&apos;t support form arrays?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/855567/adam-f&quot; title=&quot;1,730 reputation&quot; class=&quot;comment-user&quot;&gt;Adam F&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment127719430_17784656&quot;&gt;&lt;span title=&quot;2022-05-18 17:03:40Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 18 at 17:03&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;doesn&apos;t handle nested form notation into json.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/331759/skilleo&quot; title=&quot;2,412 reputation&quot; class=&quot;comment-user&quot;&gt;skilleo&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122224659_61802665&quot;&gt;&lt;span title=&quot;2021-09-12 18:03:46Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 12, 2021 at 18:03&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Obviously as it is not considered as valid html &lt;a href=&quot;https://html.spec.whatwg.org/multipage/forms.html#the-form-element&quot; rel=&quot;nofollow noreferrer&quot;&gt;html.spec.whatwg.org/multipage/forms.html#the-form-element&lt;/a&gt;, even chromium remove nested form&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/12002963/aret&quot; title=&quot;106 reputation&quot; class=&quot;comment-user&quot;&gt;aret&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122250445_61802665&quot;&gt;&lt;span title=&quot;2021-09-13 19:28:55Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 13, 2021 at 19:28&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Perfect answer.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/281724/chichilatte&quot; title=&quot;1,495 reputation&quot; class=&quot;comment-user&quot;&gt;chichilatte&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122579236_61802665&quot;&gt;&lt;span title=&quot;2021-09-27 20:02:24Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 27, 2021 at 20:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thank you So Much, work for flat Model&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/15947691/rahman&quot; title=&quot;91 reputation&quot; class=&quot;comment-user&quot;&gt;rahman&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122867367_61802665&quot;&gt;&lt;span title=&quot;2021-10-10 08:31:15Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 10, 2021 at 8:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This answer does cover the case mentioned, but it does not cover cases like checkbox[] or even one[another][another_one]&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4928281/leonardo-beal&quot; title=&quot;694 reputation&quot; class=&quot;comment-user&quot;&gt;Leonardo Beal&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment84584916_39248551&quot;&gt;&lt;span title=&quot;2018-02-14 16:06:39Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 14, 2018 at 16:06&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@LeonardoBeal i fix my ans .. check this now ..!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6293856/bhavik-hirani&quot; title=&quot;1,940 reputation&quot; class=&quot;comment-user&quot;&gt;Bhavik Hirani&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment85037939_39248551&quot;&gt;&lt;span title=&quot;2018-02-27 19:30:28Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 27, 2018 at 19:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I can&apos;t agree this is a good answer. And please when you write answers make your code self-explanatory or explain it. &lt;code&gt;this.c = function(k,v){ eval(&quot;c = typeof &quot;+k+&quot;;&quot;); if(c == &apos;undefined&apos;) _t.b(k,v);}&lt;/code&gt; is short und not explanatory. A dev with less experience will just copy this without understanding why and how it works.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1825168/iras&quot; title=&quot;1,672 reputation&quot; class=&quot;comment-user&quot;&gt;iRaS&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment104371688_39248551&quot;&gt;&lt;span title=&quot;2019-11-27 09:11:55Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 27, 2019 at 9:11&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@JackGiffin  Check out my new code now because I&apos;ve removed &lt;code&gt;eval()&lt;/code&gt; from my code.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6293856/bhavik-hirani&quot; title=&quot;1,940 reputation&quot; class=&quot;comment-user&quot;&gt;Bhavik Hirani&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment109669010_39248551&quot;&gt;&lt;span title=&quot;2020-05-25 17:02:19Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 25, 2020 at 17:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@BhavikHirani After a long search, I found your answer, you saved me a long hours of search! thanks man!!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6117399/burhan-kashour&quot; title=&quot;663 reputation&quot; class=&quot;comment-user&quot;&gt;Burhan Kashour&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120680969_39248551&quot;&gt;&lt;span title=&quot;2021-07-07 09:31:01Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 7, 2021 at 9:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I am not certain how it worked previously, but now it does not. Changed a bit that works: &lt;code&gt;Object.fromEntries(_.map($(&apos;#myform&apos;).serializeArray(), _.values))&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/994289/aldis&quot; title=&quot;411 reputation&quot; class=&quot;comment-user&quot;&gt;Aldis&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128497630_19938888&quot;&gt;&lt;span title=&quot;2022-06-24 19:44:17Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 24 at 19:44&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I tried this in a project, using &lt;code&gt;map&lt;/code&gt; like this creates an array of objects with a single property, it does not collapse the properties all into one object.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/30587/joshperry&quot; title=&quot;39,666 reputation&quot; class=&quot;comment-user&quot;&gt;joshperry&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment4083092_3277725&quot;&gt;&lt;span title=&quot;2010-10-01 22:46:08Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Oct 1, 2010 at 22:46&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;From what I can tell, the difference is that your solution does not depend on &lt;code&gt;serializeArray&lt;/code&gt; so you have the freedom to choose whatever inputs you want (eg. you can include disabled inputs), right? I.e. this is not coupled to any form or the submit event, it&apos;s just independent by itself?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4698922/davidtgq&quot; title=&quot;3,530 reputation&quot; class=&quot;comment-user&quot;&gt;davidtgq&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment62445099_30823733&quot;&gt;&lt;span title=&quot;2016-05-27 01:12:34Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 27, 2016 at 1:12&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;the only small difference with linked answer is that there is no data needed to instantiate, &lt;code&gt;reduce&lt;/code&gt; returns the object.  This is not independent since &lt;code&gt;toArray&lt;/code&gt; is from jQuery.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1197775/sites&quot; title=&quot;20,767 reputation&quot; class=&quot;comment-user&quot;&gt;sites&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment62470102_30823733&quot;&gt;&lt;span title=&quot;2016-05-27 15:09:34Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 27, 2016 at 15:09&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This does seem to work nicely. There&apos;s &lt;a href=&quot;https://github.com/AceMetrix/jquery-deparam&quot; rel=&quot;nofollow noreferrer&quot;&gt;an alternative repository for jquery-deparam&lt;/a&gt; that includes description files for bower and npm.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/145899/alf-eaton&quot; title=&quot;4,829 reputation&quot; class=&quot;comment-user&quot;&gt;Alf Eaton&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment61027854_34152725&quot;&gt;&lt;span title=&quot;2016-04-19 14:36:25Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 19, 2016 at 14:36&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I get wrong result if I don&apos;t add a init-object to that function: $(&apos;form&apos;).serializeArray().reduce((o, p) =&amp;gt; ({...o, [p.name]: p.value}), {})&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1814493/paflow&quot; title=&quot;1,716 reputation&quot; class=&quot;comment-user&quot;&gt;Paflow&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment106834826_59145232&quot;&gt;&lt;span title=&quot;2020-02-25 10:57:46Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 25, 2020 at 10:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thank you.. this makes (as you mentioned) tiny but very important difference.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/28373/adarsha&quot; title=&quot;2,237 reputation&quot; class=&quot;comment-user&quot;&gt;Adarsha&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment87152182_5552852&quot;&gt;&lt;span title=&quot;2018-04-27 18:00:36Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 27, 2018 at 18:00&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":457,"title":"Convert form data to JavaScript object with jQuery","content":"\n                \n&lt;p&gt;How do I convert all elements of my form to a JavaScript object? &lt;/p&gt;\n\n&lt;p&gt;I&apos;d like to have some way of automatically building a JavaScript object from my form, without having to loop over each element. I do not want a string, as returned by &lt;code&gt;$(&apos;#formid&apos;).serialize();&lt;/code&gt;, nor do I want the map returned by &lt;code&gt;$(&apos;#formid&apos;).serializeArray();&lt;/code&gt;&lt;/p&gt;\n    ","slug":"convert-form-data-to-javascript-object-with-jquery-1657388036834","postType":"QUESTION","createdAt":"2022-07-09T17:33:56.000Z","updatedAt":"2022-07-09T17:33:56.000Z","tags":[{"id":2347,"name":"serialization","slug":"serialization","createdAt":"2022-07-09T17:33:56.000Z","updatedAt":"2022-07-09T17:33:56.000Z","Questions_Tags":{"questionId":457,"tagId":2347}}]}},"__N_SSG":true}