{"pageProps":{"data":{"answer":["\n&lt;p&gt;There are some examples on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random&quot; rel=&quot;noreferrer&quot;&gt;Mozilla Developer Network&lt;/a&gt; page:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getRandomArbitrary&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;min, max&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min) + min;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn&apos;t an integer) and no greater than max (or the next integer\n * lower than max if max isn&apos;t an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getRandomInt&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;min, max&lt;/span&gt;) {\n    min = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;ceil&lt;/span&gt;(min);\n    max = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(max);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) + min;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;Here&apos;s the logic behind it. It&apos;s a simple rule of three:&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;Math.random()&lt;/code&gt; returns a &lt;code&gt;Number&lt;/code&gt; between 0 (inclusive) and 1 (exclusive). So we have an interval like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; .................................... &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now, we&apos;d like a number between &lt;code&gt;min&lt;/code&gt; (inclusive) and &lt;code&gt;max&lt;/code&gt; (exclusive):&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; .................................... &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n[min .................................. max)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;We can use the &lt;code&gt;Math.random&lt;/code&gt; to get the correspondent in the [min, max) interval. But, first we should factor a little bit the problem by subtracting &lt;code&gt;min&lt;/code&gt; from the second interval:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; .................................... &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n[min - min ............................ max - min)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This gives:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; .................................... &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; .................................... max - min)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;We may now apply &lt;code&gt;Math.random&lt;/code&gt; and then calculate the correspondent. Let&apos;s choose a random number:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;                &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()\n                    |\n[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; .................................... &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; .................................... max - min)\n                    |\n                    x (what we need)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So, in order to find &lt;code&gt;x&lt;/code&gt;, we would do:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;x = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Don&apos;t forget to add &lt;code&gt;min&lt;/code&gt; back, so that we get a number in the [min, max) interval:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;x = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min) + min;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;That was the first function from MDN. The second one, returns an integer between &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt;, both inclusive.&lt;/p&gt;\n&lt;p&gt;Now for getting integers, you could use &lt;code&gt;round&lt;/code&gt;, &lt;code&gt;ceil&lt;/code&gt; or &lt;code&gt;floor&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;You could use &lt;code&gt;Math.round(Math.random() * (max - min)) + min&lt;/code&gt;, this however gives a non-even distribution. Both, &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; only have approximately half the chance to roll:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;min...min+&lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt;...min+&lt;span class=&quot;hljs-number&quot;&gt;1.&lt;/span&gt;..&lt;span class=&quot;hljs-property&quot;&gt;min&lt;/span&gt;+&lt;span class=&quot;hljs-number&quot;&gt;1.5&lt;/span&gt;   ...    max-&lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt;....&lt;span class=&quot;hljs-property&quot;&gt;max&lt;/span&gt;\n ...     &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;round&lt;/span&gt;()\n   min          min+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;                          max\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;With &lt;code&gt;max&lt;/code&gt; excluded from the interval, it has an even less chance to roll than &lt;code&gt;min&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;With &lt;code&gt;Math.floor(Math.random() * (max - min +1)) + min&lt;/code&gt; you have a perfectly even distribution.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;min.... min+&lt;span class=&quot;hljs-number&quot;&gt;1.&lt;/span&gt;.. min+&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; ... max-&lt;span class=&quot;hljs-number&quot;&gt;1.&lt;/span&gt;.. max.... max+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; (is excluded &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; interval)\n|        |        |         |        |        |\n ...     &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;()\n   min     min+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;               max-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    max\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can&apos;t use &lt;code&gt;ceil()&lt;/code&gt; and &lt;code&gt;-1&lt;/code&gt; in that equation because &lt;code&gt;max&lt;/code&gt; now had a slightly less chance to roll, but you can roll the (unwanted) &lt;code&gt;min-1&lt;/code&gt; result too.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; randomnumber = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (maximum - minimum + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) + minimum;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random&quot; rel=&quot;noreferrer&quot;&gt;Math.random()&lt;/a&gt;&lt;/h1&gt;\n&lt;p&gt;Returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random#Getting_a_random_integer_between_two_values_inclusive&quot; rel=&quot;noreferrer&quot;&gt;integer random number&lt;/a&gt; between min (&lt;strong&gt;included&lt;/strong&gt;) and max (&lt;strong&gt;included&lt;/strong&gt;):&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;randomInteger&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;min, max&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) + min;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random#Getting_a_random_number_between_two_values&quot; rel=&quot;noreferrer&quot;&gt;any random number&lt;/a&gt; between min (&lt;strong&gt;included&lt;/strong&gt;) and max (&lt;strong&gt;not included&lt;/strong&gt;):&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;randomNumber&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;min, max&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min) + min;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Useful examples (integers):&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// 0 -&amp;gt; 10&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// 1 -&amp;gt; 10&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// 5 -&amp;gt; 20&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// -10 -&amp;gt; (-2)&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;) - &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;** And always nice to be reminded (Mozilla):&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Math.random() does not provide cryptographically secure random\nnumbers. Do not use them for anything related to security. Use the Web\nCrypto API instead, and more precisely the\nwindow.crypto.getRandomValues() method.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getRandomizer&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;bottom, top&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * ( &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; + top - bottom ) ) + bottom;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Usage:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rollDie = &lt;span class=&quot;hljs-title function_&quot;&gt;getRandomizer&lt;/span&gt;( &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; );\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; results = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ( &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;; i++ ) {\n    results += &lt;span class=&quot;hljs-title function_&quot;&gt;rollDie&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;;    &lt;span class=&quot;hljs-comment&quot;&gt;// Make a string filled with 1000 random numbers in the range 1-6.&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Breakdown:&lt;/p&gt;\n&lt;p&gt;We are returning a function (borrowing from functional programming) that when called, will return a random integer between the the values &lt;code&gt;bottom&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt;, inclusive. We say &apos;inclusive&apos; because we want to include both bottom and top in the range of numbers that can be returned. This way, &lt;code&gt;getRandomizer( 1, 6 )&lt;/code&gt; will return either 1, 2, 3, 4, 5, or 6.&lt;/p&gt;\n&lt;p&gt;(&apos;bottom&apos; is the lower number, and &apos;top&apos; is the greater number)&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * ( &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; + top - bottom )\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;code&gt;Math.random()&lt;/code&gt; returns a random double between 0 and 1, and if we multiply it by one plus the difference between &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt;, we&apos;ll get a double somewhere between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1+b-a&lt;/code&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * ( &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; + top - bottom ) )\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;code&gt;Math.floor&lt;/code&gt; rounds the number down to the nearest integer. So we now have all the integers between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;top-bottom&lt;/code&gt;. The 1 looks confusing, but it needs to be there because we are always rounding down, so the top number will never actually be reached without it. The random decimal we generate needs to be in the range &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;(1+top-bottom)&lt;/code&gt; so we can round down and get an integer in the range &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;top-bottom&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * ( &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; + top - bottom ) ) + bottom\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The code in the previous example gave us an integer in the range &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;top-bottom&lt;/code&gt;, so all we need to do now is add &lt;code&gt;bottom&lt;/code&gt; to that result to get an integer in the range &lt;code&gt;bottom&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; inclusive. :D&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;NOTE: If you pass in a non-integer value or the greater number first you&apos;ll get undesirable behavior, but unless anyone requests it I am not going to delve into the argument checking code as its rather far from the intent of the original question.&lt;/p&gt;\n    ","\n&lt;p&gt;All these solutions are using way too much firepower. You only need to call one function: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random&quot; rel=&quot;nofollow noreferrer&quot;&gt;Math.random();&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * max | &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This returns a random integer between 0 (inclusive) and max (non-inclusive).&lt;/p&gt;\n    ","\n&lt;p&gt;Return a random number between 1 and 10:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;((&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Return a random number between 1 and 100:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;((&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;randomRange&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;min, max&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ~~(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) + min\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Alternative if you are using &lt;strong&gt;&lt;a href=&quot;http://underscorejs.org/#random&quot;&gt;Underscore.js&lt;/a&gt;&lt;/strong&gt; you can use&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;_.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;(min, max)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you need a variable between 0 and max, you can use:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() *  max);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The other answers don&apos;t account for the perfectly reasonable parameters of &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;. Instead you should use the &lt;code&gt;round&lt;/code&gt; &lt;strong&gt;instead&lt;/strong&gt; of &lt;code&gt;ceil&lt;/code&gt; or &lt;code&gt;floor&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;randomNumber&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;minimum, maximum&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;round&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (maximum - minimum) + minimum);\n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;randomNumber&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;));  # &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;randomNumber&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;));  # &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;randomNumber&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)); # &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h3&gt;Cryptographically strong&lt;/h3&gt;\n&lt;p&gt;To get a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues&quot; rel=&quot;nofollow noreferrer&quot;&gt;cryptographically strong&lt;/a&gt; random integer number in the range [x,y], try:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;cs&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;x,y&lt;/span&gt;) =&amp;gt; x + (y - x + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)*crypto.&lt;span class=&quot;hljs-title function_&quot;&gt;getRandomValues&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Uint32Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]/&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;**&lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;cs&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Use this function to get random numbers in a given range:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;rnd&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;min, max&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*(max - min + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) + min);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is the Microsoft .NET Implementation of the &lt;em&gt;Random&lt;/em&gt; class in JavaScript&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Random&lt;/span&gt; = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Random&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Seed&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title class_&quot;&gt;Seed&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Seed&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;milliseconds&lt;/span&gt;();\n        }\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt; = [];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;56&lt;/span&gt;; i++)\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num = (&lt;span class=&quot;hljs-title class_&quot;&gt;Seed&lt;/span&gt; == -&lt;span class=&quot;hljs-number&quot;&gt;2147483648&lt;/span&gt;) ? &lt;span class=&quot;hljs-number&quot;&gt;2147483647&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;abs&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Seed&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num2 = &lt;span class=&quot;hljs-number&quot;&gt;161803398&lt;/span&gt; - num;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;] = num2;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num3 = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i_1 = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i_1 &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;; i_1++) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num4 = &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt; * i_1 % &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;;\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt;[num4] = num3;\n            num3 = num2 - num3;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (num3 &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n                num3 += &lt;span class=&quot;hljs-number&quot;&gt;2147483647&lt;/span&gt;;\n            }\n            num2 = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt;[num4];\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; j = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; j &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; j++) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; k = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; k &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;56&lt;/span&gt;; k++) {\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt;[k] -= &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; + (k + &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;) % &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;];\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt;[k] &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n                    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt;[k] += &lt;span class=&quot;hljs-number&quot;&gt;2147483647&lt;/span&gt;;\n                }\n            }\n        }\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;inext&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;inextp&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;;\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Seed&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Random&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;milliseconds&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;valueOf&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;(str.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(str.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;));\n    };\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Random&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;InternalSample&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;inext&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num2 = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;inextp&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (++num &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;56&lt;/span&gt;) {\n            num = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (++num2 &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;56&lt;/span&gt;) {\n            num2 = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num3 = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt;[num] - &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt;[num2];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (num3 == &lt;span class=&quot;hljs-number&quot;&gt;2147483647&lt;/span&gt;) {\n            num3--;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (num3 &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n            num3 += &lt;span class=&quot;hljs-number&quot;&gt;2147483647&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SeedArray&lt;/span&gt;[num] = num3;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;inext&lt;/span&gt; = num;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;inextp&lt;/span&gt; = num2;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; num3;\n    };\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Random&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Sample&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;InternalSample&lt;/span&gt;() * &lt;span class=&quot;hljs-number&quot;&gt;4.6566128752457969E-10&lt;/span&gt;;\n    };\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Random&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;GetSampleForLargeRange&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;InternalSample&lt;/span&gt;();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; flag = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;InternalSample&lt;/span&gt;() % &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (flag) {\n            num = -num;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num2 = num;\n        num2 += &lt;span class=&quot;hljs-number&quot;&gt;2147483646.0&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; num2 / &lt;span class=&quot;hljs-number&quot;&gt;4294967293.0&lt;/span&gt;;\n    };\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Random&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Next&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;minValue, maxValue&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!minValue &amp;amp;&amp;amp; !maxValue)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;InternalSample&lt;/span&gt;();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num = maxValue - minValue;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (num &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;2147483647&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;((&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;Sample&lt;/span&gt;() * num + minValue).&lt;span class=&quot;hljs-title function_&quot;&gt;toFixed&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;));\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;GetSampleForLargeRange&lt;/span&gt;() * num + minValue;\n    };\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Random&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;NextDouble&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;Sample&lt;/span&gt;();\n    };\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Random&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;NextBytes&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;buffer&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; buffer.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n            buffer[i] = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;InternalSample&lt;/span&gt;() % &lt;span class=&quot;hljs-number&quot;&gt;256&lt;/span&gt;;\n        }\n    };\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Random&lt;/span&gt;;\n}());\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Use:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; r = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Random&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; nextInt = r.&lt;span class=&quot;hljs-title class_&quot;&gt;Next&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Returns an integer between range&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; nextDbl = r.&lt;span class=&quot;hljs-title class_&quot;&gt;NextDouble&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// Returns a random decimal&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s what I use to generate random numbers.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;min,max&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;((&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;())*(max-min+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))+min;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;code&gt;Math.random()&lt;/code&gt; returns a number between 0 (inclusive) and 1 (exclusive). We multiply this number by the range (max-min). This results in a number between 0 (inclusive), and the range.&lt;/p&gt;\n&lt;p&gt;For example, take &lt;code&gt;random(2,5)0&lt;/code&gt;. We multiply the random number 0x&amp;lt;1 by the range (5-2=3), so we now have a number, x where 0x&amp;lt;3.&lt;/p&gt;\n&lt;p&gt;In order to force the function to treat both the max and min as inclusive, we add 1 to our range calculation: &lt;code&gt;Math.random()*(max-min+1)&lt;/code&gt;. Now, we multiply the random number by the (5-2+1=4), resulting in an number, x, such that 0x&amp;lt;4. If we floor this calculation, we get an integer: 0x3, with an equal likelihood of each result (1/4).&lt;/p&gt;\n&lt;p&gt;Finally, we need to convert this into an integer between the requested values. Since we already have an integer between 0 and the (max-min), we can simply map the value into the correct range by adding the minimum value. In our example, we add 2 our integer between 0 and 3, resulting in an integer between 2 and 5.&lt;/p&gt;\n    ","\n&lt;p&gt;After generating a random number using a computer program, it is still considered as a random number if the picked number is a part or the full one of the initial one. But if it was changed, then &lt;em&gt;mathematicians&lt;/em&gt; do not accept it as a random number and they can call it a biased number.&lt;/p&gt;\n&lt;p&gt;But if you are developing a program for a simple task, this will not be a case to consider. But if you are developing a program to generate a random number for a valuable stuff such as lottery program, or gambling game, then your program will be &lt;em&gt;rejected&lt;/em&gt; by the management if you are not consider about the above case.&lt;/p&gt;\n&lt;p&gt;So for those kind of people, here is my suggestion:&lt;/p&gt;\n&lt;p&gt;Generate a random number using &lt;code&gt;Math.random()&lt;/code&gt; (say this &lt;code&gt;n&lt;/code&gt;):&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Now&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) ==&amp;gt;  n*&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; (i.&lt;span class=&quot;hljs-property&quot;&gt;e&lt;/span&gt;. one digit) and &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;) ==&amp;gt; n*&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; (i.&lt;span class=&quot;hljs-property&quot;&gt;e&lt;/span&gt;., two digits) and so on. &lt;span class=&quot;hljs-title class_&quot;&gt;Here&lt;/span&gt; square bracket indicates that the boundary is inclusive and a round bracket indicates the boundary is exclusive.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then remove the rest after the decimal point. (i.e., get the floor) - using Math.floor(). This can be done.&lt;/p&gt;\n&lt;p&gt;If you know how to read the random number table to pick a random number, you know the above process (multiplying by 1, 10, 100 and so on) does not violate the one that I was mentioned at the beginning (because it changes only the place of the decimal point).&lt;/p&gt;\n&lt;p&gt;Study the following example and develop it to your needs.&lt;/p&gt;\n&lt;p&gt;If you need a sample [0,9] then the floor of n&lt;em&gt;10 is your answer and if you need [0,99] then the floor of n&lt;/em&gt;100 is your answer and so on.&lt;/p&gt;\n&lt;p&gt;Now lets enter into your role:&lt;/p&gt;\n&lt;p&gt;You&apos;ve asked for numbers in a specific range. (In this case you are biased among that range. By taking a number from [1,6] by roll a die, then you are biased into [1,6], but still it is a random number if and only if the die is unbiased.)&lt;/p&gt;\n&lt;p&gt;So consider your range ==&amp;gt; [78, 247]\nnumber of elements of the range = 247 - 78 + 1 = 170; (since both the boundaries are inclusive).&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* Method 1: */&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;78&lt;/span&gt;, j = &lt;span class=&quot;hljs-number&quot;&gt;247&lt;/span&gt;, k = &lt;span class=&quot;hljs-number&quot;&gt;170&lt;/span&gt;, a = [], b = [], c, d, e, f, l = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(; i &amp;lt;= j; i++){ a.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(i); }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(l &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;170&lt;/span&gt;){\n        c = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;; c = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(c);\n        d = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;; d = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(d);\n        b.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(a[c]); e = c + d;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;((b.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; != k) &amp;amp;&amp;amp; (e &amp;lt; k)){  b.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(a[e]); }\n        l = b.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Method 1:&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(b);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/* Method 2: */&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a, b, c, d = [], l = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(l &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;170&lt;/span&gt;){\n        a = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;; a = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(a);\n        b = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;; b = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(b);\n        c = a + b;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(c &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;247&lt;/span&gt; || c &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;78&lt;/span&gt;){ d.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(c); }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{ d.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(a); }\n        l = d.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Method 2:&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(d);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Note: In method one, first I created an array which contains numbers that you need and then randomly put them into another array.&lt;/p&gt;\n&lt;p&gt;In method two, generate numbers randomly and check those are in the range that you need. Then put it into an array. Here I generated two random numbers and used the total of them to maximize the speed of the program by minimizing the failure rate that obtaining a useful number. However, adding generated numbers will also give some biasedness. So I would recommend my first method to generate random numbers within a specific range.&lt;/p&gt;\n&lt;p&gt;In both methods, your console will show the result (press &lt;kbd&gt;F12&lt;/kbd&gt; in &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Chrome&quot; rel=&quot;nofollow noreferrer&quot;&gt;Chrome&lt;/a&gt; to open the console).&lt;/p&gt;\n    ","\n&lt;p&gt;I wanted to explain using an example:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Function to generate random whole numbers in JavaScript within a range of 5 to 25&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;General Overview:&lt;/p&gt;\n&lt;p&gt;(i) First convert it to the range - starting from 0.&lt;/p&gt;\n&lt;p&gt;(ii) Then convert it to your desired range ( which then will be very\neasy to complete).&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;So basically, if you want to generate random whole numbers from 5 to 25 then:&lt;/p&gt;\n&lt;h3&gt;First step: Converting it to range - starting from 0&lt;/h3&gt;\n&lt;p&gt;Subtract &quot;lower/minimum number&quot; from both &quot;max&quot; and &quot;min&quot;. i.e&lt;/p&gt;\n&lt;p&gt;(5-5) - (25-5)&lt;/p&gt;\n&lt;p&gt;So the range will be:&lt;/p&gt;\n&lt;p&gt;0-20  ...right?&lt;/p&gt;\n&lt;h3&gt;Step two&lt;/h3&gt;\n&lt;p&gt;Now if you want both numbers inclusive in range - i.e &quot;both 0 and 20&quot;, the equation will be:&lt;/p&gt;\n&lt;p&gt;Mathematical equation: &lt;code&gt;Math.floor((Math.random() * 21))&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;General equation: &lt;code&gt;Math.floor((Math.random() * (max-min +1)))&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;Now if we add subtracted/minimum number (i.e., 5) to the range - then automatically we can get range from 0 to 20 =&amp;gt; 5 to 25&lt;/p&gt;\n&lt;h3&gt;Step three&lt;/h3&gt;\n&lt;p&gt;Now add the difference you subtracted in equation (i.e., 5) and add &quot;Math.floor&quot; to the whole equation:&lt;/p&gt;\n&lt;p&gt;Mathematical equation: &lt;code&gt;Math.floor((Math.random() * 21) + 5)&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;General equation: &lt;code&gt;Math.floor((Math.random() * (max-min +1)) + min)&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;So finally the function will be:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;randomRange&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;min, max&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;((&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) + min);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getRandomInt&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;lower, upper&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;//to create an even sample distribution&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(lower + (&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (upper - lower + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)));\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//to produce an uneven sample distribution&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//return Math.round(lower + (Math.random() * (upper - lower)));&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//to exclude the max value from the possible values&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//return Math.floor(lower + (Math.random() * (upper - lower)));&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To test this function, and variations of this function, save the below HTML/JavaScript to a file and open with a browser.  The code will produce a &lt;em&gt;graph&lt;/em&gt; showing the distribution of one million function calls.  The code will also record the edge cases, so if the the function produces a value greater than the max, or less than the min, you.will.know.about.it.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;html&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getRandomInt&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;lower, upper&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-comment&quot;&gt;//to create an even sample distribution&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(lower + (&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (upper - lower + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)));\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//to produce an uneven sample distribution&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;//return Math.round(lower + (Math.random() * (upper - lower)));&lt;/span&gt;\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//to exclude the max value from the possible values&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;//return Math.floor(lower + (Math.random() * (upper - lower)));&lt;/span&gt;\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; min = -&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; max = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;();\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= (max - min) + &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;; i++) {\n          array.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;1000000&lt;/span&gt;; i++) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; random = &lt;span class=&quot;hljs-title function_&quot;&gt;getRandomInt&lt;/span&gt;(min, max);\n            array[random - min + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]++;\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; maxSample = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; max - min; i++) {\n            maxSample = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;max&lt;/span&gt;(maxSample, array[i]);\n        }\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;//create a bar graph to show the sample distribution&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; maxHeight = &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= (max - min) + &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;; i++) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sampleHeight = (array[i]/maxSample) * maxHeight;\n\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;span style=&quot;display:inline-block;color:&apos;&lt;/span&gt;+(sampleHeight == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;black&apos;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&apos;white&apos;&lt;/span&gt;)+&lt;span class=&quot;hljs-string&quot;&gt;&apos;;background-color:black;height:&apos;&lt;/span&gt;+sampleHeight+&lt;span class=&quot;hljs-string&quot;&gt;&apos;px&quot;&amp;gt;&amp;amp;nbsp;[&apos;&lt;/span&gt; + (i + min - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;]:&amp;amp;nbsp;&apos;&lt;/span&gt;+array[i]+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/span&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;&apos;&lt;/span&gt;);\n        }\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;hr/&amp;gt;&apos;&lt;/span&gt;);\n        &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/html&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For a random integer with a range, try:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;minimum, maximum&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; bool = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (bool) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; number = (&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * maximum + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) + minimum);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (number &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) {\n      bool = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      bool = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; number;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To get a random number say between 1 and 6, first do:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; + (&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * ((&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This multiplies a random number by 6 and then adds 0.5 to it. Next round the number to a positive integer by doing:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;round&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; + (&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * ((&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This round the number to the nearest whole number.&lt;/p&gt;\n&lt;p&gt;Or to make it more understandable do this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; + (&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * ((&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; roll = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;round&lt;/span&gt;(value);\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; roll;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In general, the code for doing this using variables is:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = (&lt;span class=&quot;hljs-title class_&quot;&gt;Min&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt;) + (&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * ((&lt;span class=&quot;hljs-title class_&quot;&gt;Max&lt;/span&gt; - &lt;span class=&quot;hljs-title class_&quot;&gt;Min&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; roll = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;round&lt;/span&gt;(value);\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; roll;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The reason for taking away 0.5 from the minimum value is because using the minimum value alone would allow you to get an integer that was one more than your maximum value. By taking away 0.5 from the minimum value you are essentially preventing the maximum value from being rounded up.&lt;/p&gt;\n    ","\n&lt;p&gt;Using the following code, you can generate an array of random numbers, without repeating, in a given range.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;genRandomNumber&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;how_many_numbers, min, max&lt;/span&gt;) {\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Parameters&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//   how_many_numbers: How many numbers you want to&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//                     generate. For example, it is 5.&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//   min (inclusive):  Minimum/low value of a range. It&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//                     must be any positive integer, but&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//                     less than max. I.e., 4.&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//   max (inclusive):  Maximum value of a range. it must&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//                     be any positive integer. I.e., 50&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//   Return type: array&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; random_number = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; how_many_numbers; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; gen_num = &lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;((&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max-min+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) + min);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;do&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; is_exist = random_number.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(gen_num);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (is_exist &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n                gen_num = &lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;((&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max-min+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) + min);\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                random_number.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(gen_num);\n                is_exist = -&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n            }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (is_exist &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    }\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;box&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = random_number;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Random whole number between lowest and highest:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;randomRange&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;low, high&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; range = (high-low);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; random = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*range);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (random === &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n    random += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; low + random;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It is not the most elegant solution, but something quick.&lt;/p&gt;\n    ","\n&lt;p&gt;I found this simple method on &lt;a href=&quot;https://en.wikipedia.org/wiki/W3Schools&quot; rel=&quot;nofollow noreferrer&quot;&gt;W3Schools&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;((&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * max) + min);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;code&gt;Math.random()&lt;/code&gt; is fast and suitable for many purposes, but it&apos;s not appropriate if you need cryptographically-secure values (it&apos;s not secure), or if you need integers from a completely uniform unbiased distribution (the multiplication approach used in others answers produces certain values slightly more often than others).&lt;/p&gt;\n\n&lt;p&gt;In such cases, we can use &lt;code&gt;crypto.getRandomValues()&lt;/code&gt; to generate secure integers, and reject any generated values that we can&apos;t map uniformly into the target range. This will be slower, but it shouldn&apos;t be significant unless you&apos;re generating extremely large numbers of values.&lt;/p&gt;\n\n&lt;p&gt;To clarify the biased distribution concern, consider the case where we want to generate a value between 1 and 5, but we have a random number generator that produces values between 1 and 16 (a 4-bit value). We want to have the same number of generated values mapping to each output value, but 16 does not evenly divide by 5: it leaves a remainder of 1. So we need to reject 1 of the possible generated values, and only continue when we get one of the 15 lesser values that can be uniformly mapped into our target range. Our behaviour could look like this pseudocode:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-none s-code-block&quot;&gt;&lt;code&gt;Generate a 4-bit integer in the range 1-16.\nIf we generated  1,  6, or 11 then output 1.\nIf we generated  2,  7, or 12 then output 2.\nIf we generated  3,  8, or 13 then output 3.\nIf we generated  4,  9, or 14 then output 4.\nIf we generated  5, 10, or 15 then output 5.\nIf we generated 16 then reject it and try again.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The following code uses similar logic, but generates a 32-bit integer instead, because that&apos;s the largest common integer size that can be represented by JavaScript&apos;s standard &lt;code&gt;number&lt;/code&gt; type. (This could be modified to use &lt;code&gt;BigInt&lt;/code&gt;s if you need a larger range.) Regardless of the chosen range, the fraction of generated values that are rejected will always be less than 0.5, so the expected number of rejections will always be less than 1.0 and usually close to 0.0; you don&apos;t need to worry about it looping forever.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;randomInteger&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;min, max&lt;/span&gt;) =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; range = max - min;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; maxGeneratedValue = &lt;span class=&quot;hljs-number&quot;&gt;0xFFFFFFFF&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; possibleResultValues = range + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; possibleGeneratedValues = maxGeneratedValue + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; remainder = possibleGeneratedValues % possibleResultValues;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; maxUnbiased = maxGeneratedValue - remainder;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isInteger&lt;/span&gt;(min) || !&lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isInteger&lt;/span&gt;(max) ||\n       max &amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;MAX_SAFE_INTEGER&lt;/span&gt; || min &amp;lt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;MIN_SAFE_INTEGER&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Arguments must be safe integers.&apos;&lt;/span&gt;);\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (range &amp;gt; maxGeneratedValue) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`Range of &lt;span class=&quot;hljs-subst&quot;&gt;${range}&lt;/span&gt; (from &lt;span class=&quot;hljs-subst&quot;&gt;${min}&lt;/span&gt; to &lt;span class=&quot;hljs-subst&quot;&gt;${max}&lt;/span&gt;) &amp;gt; &lt;span class=&quot;hljs-subst&quot;&gt;${maxGeneratedValue}&lt;/span&gt;.`&lt;/span&gt;);\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (max &amp;lt; min) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`max (&lt;span class=&quot;hljs-subst&quot;&gt;${max}&lt;/span&gt;) must be &amp;gt;= min (&lt;span class=&quot;hljs-subst&quot;&gt;${min}&lt;/span&gt;).`&lt;/span&gt;);\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (min === max) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; min;\n  } \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; generated;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;do&lt;/span&gt; {\n    generated = crypto.&lt;span class=&quot;hljs-title function_&quot;&gt;getRandomValues&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Uint32Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (generated &amp;gt; maxUnbiased);\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; min + (generated % possibleResultValues);\n};\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;randomInteger&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;));          &lt;span class=&quot;hljs-comment&quot;&gt;// -2&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;randomInteger&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;));           &lt;span class=&quot;hljs-comment&quot;&gt;// 0&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;randomInteger&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0xFFFFFFFF&lt;/span&gt;));  &lt;span class=&quot;hljs-comment&quot;&gt;// 944450079&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;randomInteger&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0xFFFFFFFF&lt;/span&gt;));\n&lt;span class=&quot;hljs-comment&quot;&gt;// Error: Range of 4294967296 covering -1 to 4294967295 is &amp;gt; 4294967295.&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;fill&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;n&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;randomInteger&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;)));\n&lt;span class=&quot;hljs-comment&quot;&gt;// [11, 8, 8, 11, 10, 8, 8, 12, 12, 12, 9, 9]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Here is an example of a JavaScript function that can generate a random number of any specified length &lt;strong&gt;without using Math.random():&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;genRandom&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;length&lt;/span&gt;)\n{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; t1 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getMilliseconds&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; min = &lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;, max = &lt;span class=&quot;hljs-string&quot;&gt;&quot;9&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; numLength = length;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (numLength != &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n  {\n     &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i &amp;lt; numLength; i++)\n     {\n        min = min.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt;;\n        max = max.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&quot;9&quot;&lt;/span&gt;;\n     }\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n  {\n     min = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n     max = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = min; i &amp;lt;= max; i++)\n  {\n       &lt;span class=&quot;hljs-comment&quot;&gt;// Empty Loop&lt;/span&gt;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; t2 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getMilliseconds&lt;/span&gt;();\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(t2);\n  result = ((max - min)*t1)/t2;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(result);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;hljs-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;/*\n                Assuming that window.crypto.getRandomValues\n                is available, the real range would be from\n                0 to 1,998 instead of 0 to 2,000.\n\n                See the JavaScript documentation\n                for an explanation:\n\n                  https://developer.mozilla.org/en-US/docs/Web/API/RandomSource/getRandomValues\n            */&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Uint8Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;crypto&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getRandomValues&lt;/span&gt;(array);\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(array[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] + array[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n        &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Uint8Array creates an array filled with a number up to three digits which would be a maximum of 999. This code is very short.&lt;/p&gt;\n    ","\n&lt;p&gt;This is my take on a random number in a range, as in I wanted to get a random number within a range of base to exponent. E.g., base = 10, exponent = 2, gives a random number from 0 to 100, ideally, and so on.&lt;/p&gt;\n&lt;p&gt;If it helps using it, here it is:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Get random number within provided base + exponent&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// By Goran Biljetina --&amp;gt; 2012&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isEmpty&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; value === &lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt; || value === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; numSeq = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;num, seq&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; toAdd = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;();\n    toAdd.&lt;span class=&quot;hljs-property&quot;&gt;num&lt;/span&gt; = num;\n    toAdd.&lt;span class=&quot;hljs-property&quot;&gt;seq&lt;/span&gt; = seq;\n    numSeq[numSeq.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;] = toAdd;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;fillNumSeq&lt;/span&gt; (num, seq) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; n;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;=seq; i++) {\n        n = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pow&lt;/span&gt;(num, i);\n        &lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(n, i);\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getRandNum&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;base, exp&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;isEmpty&lt;/span&gt;(base)) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Specify value for base parameter&quot;&lt;/span&gt;);\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;isEmpty&lt;/span&gt;(exp)) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Specify value for exponent parameter&quot;&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;fillNumSeq&lt;/span&gt;(base, exp);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; emax;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; eseq;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; nseed;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; nspan;\n    emax = (numSeq.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;);\n    eseq = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*emax) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    nseed = numSeq[eseq].&lt;span class=&quot;hljs-property&quot;&gt;num&lt;/span&gt;;\n    nspan = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;((&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;())*(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*nseed)) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*nspan) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getRandNum&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;), numSeq);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Testing:&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//getRandNum(-10, 20);&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//console.log(getRandNum(-10, 20), numSeq);&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//console.log(numSeq);&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is a function that generates a random number between min and max, both inclusive.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;randomInt&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;max, min&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;round&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min)) + min;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This I guess, is the most simplified of all the contributions.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;maxNum = &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,\nminNum = &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (maxNum - minNum) + minNum))\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This will log random numbers between 4 and 8 into the console, 4 and 8 inclusive.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/users/58808/ionu%C8%9B-g-stan&quot;&gt;Ionuț G. Stan&lt;/a&gt; wrote &lt;a href=&quot;https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range/1527820#1527820&quot;&gt;a great answer&lt;/a&gt;, but it was a bit too complex for me to grasp. So, I found an even simpler explanation of the same concepts at &lt;em&gt;&lt;a href=&quot;https://teamtreehouse.com/community/mathfloor-mathrandom-max-min-1-min-explanation&quot; rel=&quot;nofollow noreferrer&quot;&gt;Math.floor( Math.random () * (max - min + 1)) + min) Explanation&lt;/a&gt;&lt;/em&gt; by Jason Anello.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The only important thing you should know before reading Jason&apos;s explanation is a definition of &quot;truncate&quot;. He uses that term when describing &lt;code&gt;Math.floor()&lt;/code&gt;. Oxford dictionary defines &quot;truncate&quot; as:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Shorten (something) by cutting off the top or end.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;A function called &lt;code&gt;randUpTo&lt;/code&gt; that accepts a number and returns a random whole number between 0 and that number:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; randUpTo = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;num&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (num - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;A function called &lt;code&gt;randBetween&lt;/code&gt; that accepts two numbers representing a range and returns a random whole number between those two numbers:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; randBetween = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;min, max&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) + min;\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;A function called &lt;code&gt;randFromTill&lt;/code&gt; that accepts two numbers representing a range and returns a random number between min (inclusive) and max (exclusive)&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; randFromTill = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;min, max&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min) + min;\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;A function called &lt;code&gt;randFromTo&lt;/code&gt; that accepts two numbers representing a range and returns a random integer between min (inclusive) and max (inclusive):&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; randFromTo = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;min, max&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * (max - min + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) + min;\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can you this code snippet,&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; randomNumber = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;first, second&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; number = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(second));\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(number &amp;lt; first) {\n\n        number = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(second));\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; number;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":475,"title":"Generating random whole numbers in JavaScript in a specific range","content":"\n                \n&lt;p&gt;How can I generate random whole numbers between two specified variables in JavaScript, e.g. &lt;code&gt;x = 4&lt;/code&gt; and &lt;code&gt;y = 8&lt;/code&gt; would output any of &lt;code&gt;4, 5, 6, 7, 8&lt;/code&gt;?&lt;/p&gt;\n    ","slug":"generating-random-whole-numbers-in-javascript-in-a-specific-range-1657388112728","postType":"QUESTION","createdAt":"2022-07-09T17:35:12.000Z","updatedAt":"2022-07-09T17:35:12.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"Providing white space in a Swing GUI","slug":"providing-white-space-in-a-swing-gui-1657384734588"},{"title":"Why does my function that calls an API or launches a coroutine return an empty or null value?","slug":"why-does-my-function-that-calls-an-api-or-launches-a-coroutine-return-an-empty-or-null-value-1657388483820"},{"title":"What is The Rule of Three?","slug":"what-is-the-rule-of-three-1657384390295"},{"title":"How to extract and access data from JSON with PHP?","slug":"how-to-extract-and-access-data-from-json-with-php-1657384483259"},{"title":"Download a file by jQuery.Ajax","slug":"download-a-file-by-jquery.ajax-1657388220611"},{"title":"How to filter Pandas dataframe using 'in' and 'not in' like in SQL","slug":"how-to-filter-pandas-dataframe-using-'in'-and-'not-in'-like-in-sql-1657387371355"},{"title":"How can I remove a specific item from an array?","slug":"how-can-i-remove-a-specific-item-from-an-array-1657387552077"},{"title":"Iterator invalidation rules for C++ containers","slug":"iterator-invalidation-rules-for-c++-containers-1657387561090"},{"title":"How do I determine the correct path for FXML files, CSS files, Images, and other resources needed by my JavaFX Application?","slug":"how-do-i-determine-the-correct-path-for-fxml-files-css-files-images-and-other-resources-needed-by-my-javafx-application-1657388143988"},{"title":"Why are these numbers not equal?","slug":"why-are-these-numbers-not-equal-1657384729559"},{"title":"How to replace all occurrences of a string in JavaScript","slug":"how-to-replace-all-occurrences-of-a-string-in-javascript-1657384895467"},{"title":"When can I use a forward declaration?","slug":"when-can-i-use-a-forward-declaration-1657388251827"},{"title":"Default constructor with empty brackets","slug":"default-constructor-with-empty-brackets-1657388246967"},{"title":"Why does std::getline() skip input after a formatted extraction?","slug":"why-does-std::getline()-skip-input-after-a-formatted-extraction-1657384756118"},{"title":"What's the meaning of \"=>\" (an arrow formed from equals & greater than) in JavaScript?","slug":"what's-the-meaning-of-\"greater\"-(an-arrow-formed-from-equals-and-greater-than)-in-javascript-1657387977118"},{"title":"What is a clearfix?","slug":"what-is-a-clearfix-1657387337825"},{"title":"Get the cartesian product of a series of lists?","slug":"get-the-cartesian-product-of-a-series-of-lists-1657387709890"},{"title":"How to randomize (shuffle) a JavaScript array?","slug":"how-to-randomize-(shuffle)-a-javascript-array-1657384790171"},{"title":"\"Notice: Undefined variable\", \"Notice: Undefined index\", \"Warning: Undefined array key\", and \"Notice: Undefined offset\" using PHP","slug":"\"notice:-undefined-variable\"-\"notice:-undefined-index\"-\"warning:-undefined-array-key\"-and-\"notice:-undefined-offset\"-using-php-1657384250748"},{"title":"Is it possible to escape regex metacharacters reliably with sed","slug":"is-it-possible-to-escape-regex-metacharacters-reliably-with-sed-1657388428795"}]},"__N_SSG":true}