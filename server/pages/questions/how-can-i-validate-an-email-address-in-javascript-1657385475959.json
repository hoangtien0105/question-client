{"pageProps":{"data":{"answer":["\n&lt;p&gt;Using &lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot; rel=&quot;noreferrer&quot;&gt;regular expressions&lt;/a&gt; is probably the best way. You can see a bunch of tests &lt;a href=&quot;http://jsfiddle.net/ghvj4gy9/embedded/result,js/&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt; (taken from &lt;a href=&quot;https://cs.chromium.org/chromium/src/third_party/blink/web_tests/fast/forms/resources/ValidityState-typeMismatch-email.js?q=ValidityState-typeMismatch-email.js&amp;amp;sq=package:chromium&amp;amp;dr&quot; rel=&quot;noreferrer&quot;&gt;chromium&lt;/a&gt;)&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;validateEmail&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;email&lt;/span&gt;) =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;(email)\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;toLowerCase&lt;/span&gt;()\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(\n      &lt;span class=&quot;hljs-regexp&quot;&gt;/^(([^&amp;lt;&amp;gt;()[\\]\\\\.,;:\\s@&quot;]+(\\.[^&amp;lt;&amp;gt;()[\\]\\\\.,;:\\s@&quot;]+)*)|(&quot;.+&quot;))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/&lt;/span&gt;\n    );\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Here&apos;s the example of a regular expression that accepts unicode:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; re =\n  &lt;span class=&quot;hljs-regexp&quot;&gt;/^(([^&amp;lt;&amp;gt;()[\\]\\.,;:\\s@\\&quot;]+(\\.[^&amp;lt;&amp;gt;()[\\]\\.,;:\\s@\\&quot;]+)*)|(\\&quot;.+\\&quot;))@(([^&amp;lt;&amp;gt;()[\\]\\.,;:\\s@\\&quot;]+\\.)+[^&amp;lt;&amp;gt;()[\\]\\.,;:\\s@\\&quot;]{2,})$/i&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But keep in mind that one should not rely only upon JavaScript validation. JavaScript can easily be disabled. This should be validated on the server side as well.&lt;/p&gt;\n&lt;p&gt;Here&apos;s an example of the above in action:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;validateEmail&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;email&lt;/span&gt;) =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; email.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(\n    &lt;span class=&quot;hljs-regexp&quot;&gt;/^(([^&amp;lt;&amp;gt;()[\\]\\\\.,;:\\s@\\&quot;]+(\\.[^&amp;lt;&amp;gt;()[\\]\\\\.,;:\\s@\\&quot;]+)*)|(\\&quot;.+\\&quot;))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/&lt;/span&gt;\n  );\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;validate&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; $result = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#result&apos;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; email = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#email&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n  $result.&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;validateEmail&lt;/span&gt;(email)) {\n    $result.&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;(email + &lt;span class=&quot;hljs-string&quot;&gt;&apos; is valid :)&apos;&lt;/span&gt;);\n    $result.&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;color&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;green&apos;&lt;/span&gt;);\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    $result.&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;(email + &lt;span class=&quot;hljs-string&quot;&gt;&apos; is not valid :(&apos;&lt;/span&gt;);\n    $result.&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;color&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;red&apos;&lt;/span&gt;);\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n\n$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#email&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;input&apos;&lt;/span&gt;, validate);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And this is the &lt;code&gt;html&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;email&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Enter an email address: &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;email&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;result&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I&apos;ve slightly modified &lt;a href=&quot;https://stackoverflow.com/a/48800/4832311&quot;&gt;Jaymon&apos;s answer&lt;/a&gt; for people who want really simple validation in the form of:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;anystring&lt;span class=&quot;hljs-keyword&quot;&gt;@anystring&lt;/span&gt;.anystring\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The regular expression:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-regexp&quot;&gt;/\\S+@\\S+\\.\\S+/&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;To prevent matching multiple @ signs:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;/^[^\\&lt;span class=&quot;hljs-symbol&quot;&gt;s@&lt;/span&gt;]+@[^\\&lt;span class=&quot;hljs-symbol&quot;&gt;s@&lt;/span&gt;]+\\.[^\\&lt;span class=&quot;hljs-symbol&quot;&gt;s@&lt;/span&gt;]+$/\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Example JavaScript function:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;validateEmail&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;email&lt;/span&gt;) \n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; re = &lt;span class=&quot;hljs-regexp&quot;&gt;/\\S+@\\S+\\.\\S+/&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; re.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(email);\n    }\n    \n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;validateEmail&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;anystring@anystring.anystring&apos;&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Just for completeness, &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot; rel=&quot;noreferrer&quot;&gt;here you have another RFC 2822 compliant regex&lt;/a&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The official standard is known as &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2822#section-3.4.1&quot; rel=&quot;noreferrer&quot;&gt;RFC 2822&lt;/a&gt;. It describes the syntax that valid email addresses must adhere to. You can (&lt;strong&gt;but you shouldn&apos;t&lt;/strong&gt;  &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot; rel=&quot;noreferrer&quot;&gt;read on&lt;/a&gt;) implement it with this regular expression:&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;(?:[a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-]+)*|&quot;(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*&quot;)@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;(...) We get a more practical implementation of RFC 2822 if we omit the syntax using double quotes and square brackets. &lt;strong&gt;It will still match 99.99% of all email addresses in actual use today.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;[a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;A further change you could make is to allow any two-letter country code top level domain, and only specific generic top level domains. &lt;strong&gt;This regex filters dummy email addresses like &lt;code&gt;asdf@adsf.adsf&lt;/code&gt;&lt;/strong&gt;. You &lt;strong&gt;will need to update it as new top-level domains are added&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;[a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+(?:[A-Z]{2}|com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|museum)\\b&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;So even when following official standards, there are still trade-offs to be made. &lt;em&gt;&lt;strong&gt;Don&apos;t blindly copy regular expressions from online libraries or discussion forums. Always test them on your own data and with your own applications.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;sub&gt;Emphasis mine&lt;/sub&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Wow, there are lots of complexity here. If all you want to do is just catch the most obvious syntax errors, I would do something like this:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ruby&quot;&gt;^\\S+@\\S+&lt;span class=&quot;hljs-variable&quot;&gt;$\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It usually catches the most obvious errors that the user makes and assures that the form is mostly right, which is what JavaScript validation is all about.&lt;/p&gt;\n&lt;p&gt;EDIT:\nWe can also check for &apos;.&apos; in the email using&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-regexp&quot;&gt;/^\\S+@\\S+\\.\\S+$/&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;There&apos;s something you have to understand the second you decide to use a regular expression to validate emails: &lt;a href=&quot;http://ex-parrot.com/~pdw/Mail-RFC822-Address.html&quot; rel=&quot;noreferrer&quot;&gt;It&apos;s probably not a good idea&lt;/a&gt;. Once you have come to terms with that, there are many implementations out there that can get you halfway there, &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot; rel=&quot;noreferrer&quot;&gt;this article sums them up nicely.&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;In short, however, the only way to be absolutely, positively sure that what the user entered is in fact an email is to actually send an email and see what happens. Other than that it&apos;s all just guesses.&lt;/p&gt;\n    ","\n&lt;p&gt;HTML5 itself has email validation. If your browser supports HTML5 then you can use the following code.&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;Email Address\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;placeholder&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;me@example.com&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;required&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/edwinthomas25/z6wev5L0/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsFiddle&lt;/a&gt; link&lt;/p&gt;\n&lt;p&gt;From the &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#valid-e-mail-address&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML5 spec&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;A &lt;strong&gt;valid e-mail address&lt;/strong&gt; is a string that matches the &lt;code&gt;email&lt;/code&gt; production of the following ABNF, the character set for which is Unicode.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;email&lt;/span&gt;   = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;*( atext / &lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt; ) &lt;span class=&quot;hljs-string&quot;&gt;&quot;@&quot;&lt;/span&gt; label *( &lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt; label )\n&lt;span class=&quot;hljs-attr&quot;&gt;label&lt;/span&gt;   = let-dig [ [ ldh-str ] let-dig ]  &lt;span class=&quot;hljs-comment&quot;&gt;; limited to a length of 63 characters by RFC 1034 section 3.5&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;atext&lt;/span&gt;   = &amp;lt; as defined in RFC &lt;span class=&quot;hljs-number&quot;&gt;5322&lt;/span&gt; section &lt;span class=&quot;hljs-number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &amp;gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;let-dig&lt;/span&gt; = &amp;lt; as defined in RFC &lt;span class=&quot;hljs-number&quot;&gt;1034&lt;/span&gt; section &lt;span class=&quot;hljs-number&quot;&gt;3.5&lt;/span&gt; &amp;gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;ldh-str&lt;/span&gt; = &amp;lt; as defined in RFC &lt;span class=&quot;hljs-number&quot;&gt;1034&lt;/span&gt; section &lt;span class=&quot;hljs-number&quot;&gt;3.5&lt;/span&gt; &amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This requirement is a &lt;a href=&quot;http://www.w3.org/TR/html5/introduction.html#willful-violation&quot; rel=&quot;nofollow noreferrer&quot;&gt;willful violation&lt;/a&gt; of RFC 5322, which defines a syntax for e-mail addresses that is simultaneously too strict (before the &quot;@&quot; character), too vague (after the &quot;@&quot; character), and too lax (allowing comments, whitespace characters, and quoted strings in manners unfamiliar to most users) to be of practical use here.&lt;/p&gt;\n&lt;p&gt;The following JavaScript- and Perl-compatible regular expression is an implementation of the above definition.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-markdown&quot;&gt;/^[&lt;span class=&quot;hljs-string&quot;&gt;a-zA-Z0-9.!#$%&amp;amp;&apos;*+\\/=?^_`{|}~-&lt;/span&gt;]+@[&lt;span class=&quot;hljs-string&quot;&gt;a-zA-Z0-9&lt;/span&gt;](&lt;span class=&quot;hljs-link&quot;&gt;?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9]&lt;/span&gt;)?(?:\\.[&lt;span class=&quot;hljs-string&quot;&gt;a-zA-Z0-9&lt;/span&gt;](&lt;span class=&quot;hljs-link&quot;&gt;?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9]&lt;/span&gt;)?)&lt;span class=&quot;hljs-emphasis&quot;&gt;*$/\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;I have found this to be the best solution:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;/^[^\\&lt;span class=&quot;hljs-symbol&quot;&gt;s@&lt;/span&gt;]+@[^\\&lt;span class=&quot;hljs-symbol&quot;&gt;s@&lt;/span&gt;]+\\.[^\\&lt;span class=&quot;hljs-symbol&quot;&gt;s@&lt;/span&gt;]+$/\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It allows the following formats:&lt;/p&gt;\n\n&lt;pre&gt;1.  prettyandsimple@example.com\n2.  very.common@example.com\n3.  disposable.style.email.with+symbol@example.com\n4.  other.email-with-dash@example.com\n9.  #!$%&amp;amp;&apos;*+-/=?^_`{}|~@example.org\n6.  &quot;()[]:,;@\\\\\\&quot;!#$%&amp;amp;&apos;*+-/=?^_`{}| ~.a&quot;@example.org\n7.  &quot; &quot;@example.org (space between the quotes)\n8.  üñîçøðé@example.com (Unicode characters in local part)\n9.  üñîçøðé@üñîçøðé.com (Unicode characters in domain part)\n10. Pelé@example.com (Latin)\n11. δοκιμή@παράδειγμα.δοκιμή (Greek)\n12. @. (Chinese)\n13. @. (Japanese)\n14. чебурашка@ящик-с-апельсинами.рф (Cyrillic)\n&lt;/pre&gt;\n\n&lt;p&gt;It&apos;s clearly versatile and allows the all-important international characters, while still enforcing the basic anything@anything.anything format. It will block spaces which are technically allowed by RFC, but they are so rare that I&apos;m happy to do this.&lt;/p&gt;\n    ","\n&lt;p&gt;In modern browsers you can build on top of @Sushil&apos;s answer with pure JavaScript and the &lt;a href=&quot;http://en.wikipedia.org/wiki/Document_Object_Model&quot; rel=&quot;noreferrer&quot;&gt;DOM&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lua&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;validateEmail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(value)&lt;/span&gt;&lt;/span&gt; {\n  var &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt; = document.createElement(&lt;span class=&quot;hljs-string&quot;&gt;&apos;input&apos;&lt;/span&gt;);\n\n  &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;email&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;.required = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n  &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;.value = value;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; typeof &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;.checkValidity === &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt; ? &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;.checkValidity() : /\\S+@\\S+\\.\\S+/.test(value);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&apos;ve put together an example in the fiddle &lt;a href=&quot;http://jsfiddle.net/boldewyn/2b6d5/&quot; rel=&quot;noreferrer&quot;&gt;http://jsfiddle.net/boldewyn/2b6d5/&lt;/a&gt;. Combined with feature detection and the bare-bones validation from &lt;a href=&quot;https://stackoverflow.com/a/9204568/324094&quot;&gt;Squirtle&apos;s Answer&lt;/a&gt;, it frees you from the regular expression massacre and does not bork on old browsers.&lt;/p&gt;\n    ","\n&lt;p&gt;JavaScript can match a regular expression:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;emailAddress.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;( &lt;span class=&quot;hljs-regexp&quot;&gt;/ some_regex /&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Here&apos;s an &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc22&quot; rel=&quot;noreferrer&quot;&gt;RFC22&lt;/a&gt; regular expression for emails:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ruby&quot;&gt;^((&lt;span class=&quot;hljs-string&quot;&gt;?&amp;gt;&lt;/span&gt;[a-zA-Z\\d!&lt;span class=&quot;hljs-comment&quot;&gt;#$%&amp;amp;&apos;*+\\-/=?^_`{|}~]+\\x20*|&quot;((?=[\\x01-\\x7f])[^&quot;\\\\]|\\\\[\\x01-\\x7f])*&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\x20*)*(?&amp;lt;angle&amp;gt;&amp;lt;))?((?!\\.)(?&amp;gt;\\.?[a-zA-Z\\d!#$%&amp;amp;&apos;*+\\-/=?^_`{|}~]+)+|&quot;&lt;/span&gt;((&lt;span class=&quot;hljs-string&quot;&gt;?=&lt;/span&gt;[\\x01-\\x\n7f])[^&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\]|\\\\[\\x01-\\x7f])*&quot;&lt;/span&gt;)@(((&lt;span class=&quot;hljs-string&quot;&gt;?!&lt;/span&gt;-)[a-zA-Z\\d\\-]+(&lt;span class=&quot;hljs-string&quot;&gt;?&amp;lt;&lt;/span&gt;!-)\\.)+[a-zA-Z]{&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,}|&lt;span class=&quot;hljs-params&quot;&gt;\\[(((?(?&amp;lt;\n!\\[)\\.)(25[0-5]&lt;/span&gt;|&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\\d|&lt;span class=&quot;hljs-params&quot;&gt;[01]?\\d?\\d)){4}&lt;/span&gt;|[a-zA-Z\\d\\-]*[a-zA-Z\\d]&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;((&lt;span class=&quot;hljs-string&quot;&gt;?=&lt;/span&gt;[\\x01-\\x7f])\n[^\\\\\\[\\]]|&lt;span class=&quot;hljs-params&quot;&gt;\\\\[\\x01-\\x7f])+)\\])(?(angle)&amp;gt;)$\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is the correct RFC822 version.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;function &lt;span class=&quot;hljs-title function_&quot;&gt;checkEmail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(emailAddress)&lt;/span&gt; {\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sQtext&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sDtext&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sAtom&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sQuotedPair&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;\\\\x5c[\\\\x00-\\\\x7f]&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sDomainLiteral&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;\\\\x5b(&apos;&lt;/span&gt; + sDtext + &lt;span class=&quot;hljs-string&quot;&gt;&apos;|&apos;&lt;/span&gt; + sQuotedPair + &lt;span class=&quot;hljs-string&quot;&gt;&apos;)*\\\\x5d&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sQuotedString&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;\\\\x22(&apos;&lt;/span&gt; + sQtext + &lt;span class=&quot;hljs-string&quot;&gt;&apos;|&apos;&lt;/span&gt; + sQuotedPair + &lt;span class=&quot;hljs-string&quot;&gt;&apos;)*\\\\x22&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sDomain_ref&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sAtom;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sSubDomain&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;(&apos;&lt;/span&gt; + sDomain_ref + &lt;span class=&quot;hljs-string&quot;&gt;&apos;|&apos;&lt;/span&gt; + sDomainLiteral + &lt;span class=&quot;hljs-string&quot;&gt;&apos;)&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sWord&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;(&apos;&lt;/span&gt; + sAtom + &lt;span class=&quot;hljs-string&quot;&gt;&apos;|&apos;&lt;/span&gt; + sQuotedString + &lt;span class=&quot;hljs-string&quot;&gt;&apos;)&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sDomain&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sSubDomain + &lt;span class=&quot;hljs-string&quot;&gt;&apos;(\\\\x2e&apos;&lt;/span&gt; + sSubDomain + &lt;span class=&quot;hljs-string&quot;&gt;&apos;)*&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sLocalPart&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sWord + &lt;span class=&quot;hljs-string&quot;&gt;&apos;(\\\\x2e&apos;&lt;/span&gt; + sWord + &lt;span class=&quot;hljs-string&quot;&gt;&apos;)*&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sAddrSpec&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sLocalPart + &lt;span class=&quot;hljs-string&quot;&gt;&apos;\\\\x40&apos;&lt;/span&gt; + sDomain; &lt;span class=&quot;hljs-comment&quot;&gt;// complete RFC822 email address spec&lt;/span&gt;\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sValidEmail&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;^&apos;&lt;/span&gt; + sAddrSpec + &lt;span class=&quot;hljs-string&quot;&gt;&apos;$&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// as whole string&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;reValidEmail&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(sValidEmail);\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; reValidEmail.test(emailAddress);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Correct validation of email address in compliance with the RFCs is not something that can be achieved with a one-liner regular expression. An article with the best solution I&apos;ve found in PHP is &lt;em&gt;&lt;a href=&quot;http://www.dominicsayers.com/isemail/&quot; rel=&quot;noreferrer&quot;&gt;What is a valid email address?&lt;/a&gt;&lt;/em&gt;. Obviously, it has been ported to Java. &lt;strike&gt;I think the function is too complex to be ported and used in JavaScript.&lt;/strike&gt; JavaScript/node.js port: &lt;a href=&quot;https://www.npmjs.com/package/email-addresses&quot; rel=&quot;noreferrer&quot;&gt;https://www.npmjs.com/package/email-addresses&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;A good practice is to validate your data on the client, but double-check the validation on the server. With this in mind, you can simply check whether a string looks like a valid email address on the client and perform the strict check on the server.&lt;/p&gt;\n\n&lt;p&gt;Here&apos;s the JavaScript function I use to check if a string looks like a valid mail address:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;function looksLikeMail(&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;) {\n    var lastAtPos = &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.lastIndexOf(&lt;span class=&quot;hljs-string&quot;&gt;&apos;@&apos;&lt;/span&gt;);\n    var lastDotPos = &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.lastIndexOf(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (lastAtPos &amp;lt; lastDotPos &amp;amp;&amp;amp; lastAtPos &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.indexOf(&lt;span class=&quot;hljs-string&quot;&gt;&apos;@@&apos;&lt;/span&gt;) == -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; lastDotPos &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &amp;amp;&amp;amp; (&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.length - lastDotPos) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Explanation:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;lastAtPos &amp;lt; lastDotPos&lt;/code&gt;: Last &lt;code&gt;@&lt;/code&gt; should be before last &lt;code&gt;.&lt;/code&gt; since &lt;code&gt;@&lt;/code&gt; cannot be part of server name (as far as I know).&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;lastAtPos &amp;gt; 0&lt;/code&gt;: There should be something (the email username) before the last &lt;code&gt;@&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;str.indexOf(&apos;@@&apos;) == -1&lt;/code&gt;: There should be no &lt;code&gt;@@&lt;/code&gt; in the address. Even if &lt;code&gt;@&lt;/code&gt; appears as the last character in email username, it has to be quoted so &lt;code&gt;&quot;&lt;/code&gt; would be between that &lt;code&gt;@&lt;/code&gt; and the last &lt;code&gt;@&lt;/code&gt; in the address.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;lastDotPos &amp;gt; 2&lt;/code&gt;: There should be at least three characters before the last dot, for example &lt;code&gt;a@b.com&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;(str.length - lastDotPos) &amp;gt; 2&lt;/code&gt;: There should be enough characters after the last dot to form a two-character domain. I&apos;m not sure if the brackets are necessary.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;All email addresses contain an &apos;at&apos; (i.e. @) symbol. Test that necessary condition:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;email.includes(&lt;span class=&quot;hljs-string&quot;&gt;&apos;@&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Or, if you need to support IE/older browsers:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;email.indexOf(&lt;span class=&quot;hljs-string&quot;&gt;&apos;@&apos;&lt;/span&gt;) &amp;gt; 0\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Don&apos;t bother with anything more complicated. Even if you could perfectly determine whether an email is RFC-syntactically valid, that wouldn&apos;t tell you whether it belongs to the person who supplied it. That&apos;s what really matters.&lt;/p&gt;\n&lt;p&gt;To test that, send a validation message.&lt;/p&gt;\n    ","\n&lt;p&gt;This was stolen from &lt;a href=&quot;http://codesnippets.joyent.com/posts/show/1917&quot; rel=&quot;noreferrer&quot;&gt;http://codesnippets.joyent.com/posts/show/1917&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;email = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;email&apos;&lt;/span&gt;);\nfilter = &lt;span class=&quot;hljs-regexp&quot;&gt;/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (filter.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(email.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;)) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Yay! valid&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n  {&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Do this:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-markdown&quot;&gt;^([&lt;span class=&quot;hljs-string&quot;&gt;a-zA-Z0-9!#$%&amp;amp;&apos;*+\\/=?^_`{|}~-&lt;/span&gt;]+(?:\\.[&lt;span class=&quot;hljs-string&quot;&gt;a-zA-Z0-9!#$%&amp;amp;&apos;*+\\/=?^_`{|}~-&lt;/span&gt;]+)&lt;span class=&quot;hljs-emphasis&quot;&gt;*@(?:[&lt;span class=&quot;hljs-string&quot;&gt;a-zA-Z0-9&lt;/span&gt;](&lt;span class=&quot;hljs-link&quot;&gt;?:[a-zA-Z0-9-]*[a-zA-Z0-9]&lt;/span&gt;)?\\.)+[&lt;span class=&quot;hljs-string&quot;&gt;a-zA-Z0-9&lt;/span&gt;](&lt;span class=&quot;hljs-link&quot;&gt;?:[a-zA-Z0-9-]*[a-zA-Z0-9]&lt;/span&gt;)?)$\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;It&apos;s based on &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot; rel=&quot;noreferrer&quot;&gt;RFC 2822&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Test it at &lt;a href=&quot;https://regex101.com/r/857lzc/1&quot; rel=&quot;noreferrer&quot;&gt;https://regex101.com/r/857lzc/1&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Often when storing email addresses in the database I make them lowercase and, in practice, regexs can usually be marked case insensitive. In those cases this is slightly shorter:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-markdown&quot;&gt;[&lt;span class=&quot;hljs-string&quot;&gt;a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-&lt;/span&gt;]+(?:\\.[&lt;span class=&quot;hljs-string&quot;&gt;a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-&lt;/span&gt;]+)&lt;span class=&quot;hljs-emphasis&quot;&gt;*@(?:[&lt;span class=&quot;hljs-string&quot;&gt;a-z0-9&lt;/span&gt;](&lt;span class=&quot;hljs-link&quot;&gt;?:[a-z0-9-]*[a-z0-9]&lt;/span&gt;)?\\.)+[&lt;span class=&quot;hljs-string&quot;&gt;a-z0-9&lt;/span&gt;](&lt;span class=&quot;hljs-link&quot;&gt;?:[a-z0-9-]*[a-z0-9]&lt;/span&gt;)?\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Here&apos;s an example of it being used in JavaScript (with the case insensitive flag &lt;code&gt;i&lt;/code&gt; at the end).&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; emailCheck=&lt;span class=&quot;hljs-regexp&quot;&gt;/^[a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( emailCheck.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;some.body@domain.co.uk&apos;&lt;/span&gt;) );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;br&gt;\nTechnically some emails can include quotes in the section before the &lt;code&gt;@&lt;/code&gt; symbol with escape characters inside the quotes (so your email user can be obnoxious and contain stuff like &lt;code&gt;@&lt;/code&gt; and &lt;code&gt;&quot;...&quot;&lt;/code&gt; as long as it&apos;s written in quotes). NOBODY DOES THIS EVER! It&apos;s obsolete. But, it IS included in the true &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot; rel=&quot;noreferrer&quot;&gt;RFC 2822&lt;/a&gt; standard and omitted here.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;:\nThe beginning of an email (before the @ sign) &lt;em&gt;can&lt;/em&gt; be case sensitive (via the spec). However, anyone with a case-sensitive email is probably used to having issues, and, in practice, case insensitive is a safe assumption. More info: &lt;a href=&quot;https://stackoverflow.com/questions/9807909/are-email-addresses-case-sensitive&quot;&gt;Are email addresses case sensitive?&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;More info: &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot; rel=&quot;noreferrer&quot;&gt;http://www.regular-expressions.info/email.html&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;m really looking forward to solve this problem.\nSo I modified email validation regular expression above &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Original&lt;br&gt;\n&lt;code&gt;/^(([^&amp;lt;&amp;gt;()\\[\\]\\\\.,;:\\s@&quot;]+(\\.[^&amp;lt;&amp;gt;()\\[\\]\\\\.,;:\\s@&quot;]+)*)|(&quot;.+&quot;))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Modified&lt;br&gt;\n&lt;code&gt;/^(([^&amp;lt;&amp;gt;()\\[\\]\\.,;:\\s@\\&quot;]+(\\.[^&amp;lt;&amp;gt;()\\[\\]\\.,;:\\s@\\&quot;]+)*)|(\\&quot;.+\\&quot;))@(([^&amp;lt;&amp;gt;()\\.,;\\s@\\&quot;]+\\.{0,1})+[^&amp;lt;&amp;gt;()\\.,;:\\s@\\&quot;]{2,})$/&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;to pass the examples in &lt;a href=&quot;https://en.wikipedia.org/wiki/Email_address#cite_note-20/syntax&quot;&gt;Wikipedia Email Address&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;And you can see the result in &lt;a href=&quot;http://regexr.com/3dnsr&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/m2YBr.png&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/m2YBr.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Simply check out if the entered email address is valid or not using HTML.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lua&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;email&quot;&lt;/span&gt;/&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There isn&apos;t any need to write a function for validation.&lt;/p&gt;\n    ","\n&lt;p&gt;You should not use regular expressions to validate an input string to check if it&apos;s an email. It&apos;s too complicated and would not cover all the cases.&lt;/p&gt;\n\n&lt;p&gt;Now since you can only cover 90% of the cases, write something like:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-matlab&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;isPossiblyValidEmail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(txt)&lt;/span&gt; {&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; txt.&lt;span class=&quot;hljs-built_in&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; &amp;amp;&amp;amp; txt.indexOf(&lt;span class=&quot;hljs-string&quot;&gt;&apos;@&apos;&lt;/span&gt;)&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can refine it. For instance, &apos;aaa@&apos; is valid. But overall you get the gist. And don&apos;t get carried away... A simple 90% solution is better than 100% solution that does not work. &lt;/p&gt;\n\n&lt;p&gt;The world needs simpler code...&lt;/p&gt;\n    ","\n&lt;p&gt;It&apos;s hard to get an email validator 100% correct. The only real way to get it correct would be to send a test email to the account. That said, there are a few basic checks that can help make sure that you&apos;re getting something reasonable.&lt;/p&gt;\n\n&lt;p&gt;Some things to improve:&lt;/p&gt;\n\n&lt;p&gt;Instead of new &lt;code&gt;RegExp&lt;/code&gt;, just try writing the &lt;code&gt;regexp&lt;/code&gt; out like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (reg.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/@/&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Second, check to make sure that a period comes after the &lt;code&gt;@&lt;/code&gt; sign, and make sure that there are characters between the &lt;code&gt;@&lt;/code&gt;s and periods. &lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Wikipedia standard mail syntax :&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Email_address#Examples&quot; rel=&quot;noreferrer&quot;&gt;https://en.wikipedia.org/wiki/Email_address#Examples&lt;/a&gt;\n&lt;a href=&quot;https://fr.wikipedia.org/wiki/Adresse_%C3%A9lectronique#Syntaxe_exacte&quot; rel=&quot;noreferrer&quot;&gt;https://fr.wikipedia.org/wiki/Adresse_%C3%A9lectronique#Syntaxe_exacte&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Function :&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; validMail(mail)\n{\n    &lt;span class=&quot;hljs-built_in&quot;&gt;return&lt;/span&gt; /^(([^&amp;lt;&amp;gt;()\\[\\]\\.,;:\\s@\\&quot;]+(\\.[^&amp;lt;&amp;gt;()\\[\\]\\.,;:\\s@\\&quot;]+)*)|(\\&quot;.+\\&quot;))@(([^&amp;lt;&amp;gt;()\\.,;\\s@\\&quot;]+\\.{0,1})+([^&amp;lt;&amp;gt;()\\.,;:\\s@\\&quot;]{2,}|[\\d\\.]+))$/.test(mail);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Valids mails :&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-swift&quot;&gt;validMail(&apos;&lt;span class=&quot;hljs-type&quot;&gt;Abc&lt;/span&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@example&lt;/span&gt;.com&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;&lt;span class=&quot;hljs-type&quot;&gt;Abc&lt;/span&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@example&lt;/span&gt;.com.&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;&lt;span class=&quot;hljs-type&quot;&gt;Abc&lt;/span&gt;@&lt;span class=&quot;hljs-number&quot;&gt;10.42&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;0.1&lt;/span&gt;&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;user&lt;span class=&quot;hljs-meta&quot;&gt;@localserver&lt;/span&gt;&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;&lt;span class=&quot;hljs-type&quot;&gt;Abc&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@example&lt;/span&gt;.com&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;user&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;mailbox&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;department&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;shipping&lt;span class=&quot;hljs-meta&quot;&gt;@example&lt;/span&gt;.com&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;&lt;span class=&quot;hljs-string&quot;&gt;&quot;very.(),:;&amp;lt;&amp;gt;[]&lt;span class=&quot;hljs-subst&quot;&gt;\\&quot;&lt;/span&gt;.VERY.&lt;span class=&quot;hljs-subst&quot;&gt;\\&quot;&lt;/span&gt;very@&lt;span class=&quot;hljs-subst&quot;&gt;\\\\&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot;&gt;\\&quot;&lt;/span&gt;very&lt;span class=&quot;hljs-subst&quot;&gt;\\&quot;&lt;/span&gt;.unusual&quot;&lt;/span&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@strange&lt;/span&gt;.example.com&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;&lt;span class=&quot;hljs-operator&quot;&gt;!&lt;/span&gt;#$&lt;span class=&quot;hljs-operator&quot;&gt;%&amp;amp;&lt;/span&gt;\\&apos;&lt;span class=&quot;hljs-operator&quot;&gt;*+-/=?^&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;_&lt;/span&gt;`.{&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;}&lt;span class=&quot;hljs-operator&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@example&lt;/span&gt;.com&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;&lt;span class=&quot;hljs-string&quot;&gt;&quot;()&amp;lt;&amp;gt;[]:,;@&lt;span class=&quot;hljs-subst&quot;&gt;\\\\&lt;/span&gt;&lt;span class=&quot;hljs-subst&quot;&gt;\\&quot;&lt;/span&gt;!#$%&amp;amp;&lt;span class=&quot;hljs-subst&quot;&gt;\\&apos;&lt;/span&gt;-/=?^_`{}| ~.a&quot;&lt;/span&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@example&lt;/span&gt;.org&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;&lt;span class=&quot;hljs-string&quot;&gt;&quot;Abc@def&quot;&lt;/span&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@example&lt;/span&gt;.com&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;&lt;span class=&quot;hljs-string&quot;&gt;&quot;Fred Bloggs&quot;&lt;/span&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@example&lt;/span&gt;.com&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;&lt;span class=&quot;hljs-string&quot;&gt;&quot;Joe.&lt;span class=&quot;hljs-subst&quot;&gt;\\\\&lt;/span&gt;Blow&quot;&lt;/span&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@example&lt;/span&gt;.com&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;&lt;span class=&quot;hljs-type&quot;&gt;Loïc&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;Accentué&lt;/span&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@voilà&lt;/span&gt;.fr&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;&lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@example&lt;/span&gt;.org&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\nvalidMail(&apos;user@[IPv6:&lt;span class=&quot;hljs-number&quot;&gt;2001&lt;/span&gt;:DB8::&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]&apos;) &lt;span class=&quot;hljs-comment&quot;&gt;// Return true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Invalids mails :&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;validMail(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Abc.example.com&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\nvalidMail(&lt;span class=&quot;hljs-string&quot;&gt;&apos;A@b@c@example.com&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\nvalidMail(&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&quot;b(c)d,e:f;g&amp;lt;h&amp;gt;i[j\\k]l@example.com&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\nvalidMail(&lt;span class=&quot;hljs-string&quot;&gt;&apos;just&quot;not&quot;right@example.com&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\nvalidMail(&lt;span class=&quot;hljs-string&quot;&gt;&apos;this is&quot;not\\allowed@example.com&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\nvalidMail(&lt;span class=&quot;hljs-string&quot;&gt;&apos;this\\ still\\&quot;not\\\\allowed@example.com&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\nvalidMail(&lt;span class=&quot;hljs-string&quot;&gt;&apos;john..doe@example.com&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\nvalidMail(&lt;span class=&quot;hljs-string&quot;&gt;&apos;john.doe@example..com&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Show this test : &lt;a href=&quot;https://regex101.com/r/LHJ9gU/1&quot; rel=&quot;noreferrer&quot;&gt;https://regex101.com/r/LHJ9gU/1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This is how &lt;a href=&quot;https://github.com/chriso/validator.js&quot; rel=&quot;noreferrer&quot;&gt;node-validator&lt;/a&gt; does it:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-markdown&quot;&gt;/^(?:[&lt;span class=&quot;hljs-string&quot;&gt;\\w\\!\\#\\$\\%\\&amp;amp;\\&apos;\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~&lt;/span&gt;]+\\.)&lt;span class=&quot;hljs-emphasis&quot;&gt;*[&lt;span class=&quot;hljs-string&quot;&gt;\\w\\!\\#\\$\\%\\&amp;amp;\\&apos;\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~&lt;/span&gt;]+@(?:(?:(?:[&lt;span class=&quot;hljs-string&quot;&gt;a-zA-Z0-9&lt;/span&gt;](&lt;span class=&quot;hljs-link&quot;&gt;?:[a-zA-Z0-9\\-](?!\\.&lt;/span&gt;)){0,61}[&lt;span class=&quot;hljs-string&quot;&gt;a-zA-Z0-9&lt;/span&gt;]?\\.)+[&lt;span class=&quot;hljs-string&quot;&gt;a-zA-Z0-9&lt;/span&gt;](&lt;span class=&quot;hljs-link&quot;&gt;?:[a-zA-Z0-9\\-](?!$&lt;/span&gt;)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;A solution that does not check the existence of the TLD is incomplete.&lt;/h2&gt;\n\n&lt;p&gt;Almost all answers to this questions suggest using Regex to validate emails addresses. I think Regex is only good for a rudimentary validation. It seems that the checking validation of email addresses is actually two separate problems:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;1- Validation of email format:&lt;/strong&gt; Making sure if the email complies with the format and pattern of emails in RFC 5322 and if the TLD actually exists. A list of all valid TLDs can be found &lt;a href=&quot;http://data.iana.org/TLD/tlds-alpha-by-domain.txt&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;For example, although the address &lt;code&gt;example@example.ccc&lt;/code&gt; will pass the regex, it is not a valid email, because &lt;code&gt;ccc&lt;/code&gt; is not a top-level domain by IANA.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;2- Making sure the email actually exists:&lt;/strong&gt; For doing this, &lt;strong&gt;the only option&lt;/strong&gt; is &lt;a href=&quot;https://davidcel.is/posts/stop-validating-email-addresses-with-regex/#just-send-them-an-email-already&quot; rel=&quot;noreferrer&quot;&gt;to send the users an email&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Use this code inside your validator function:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; emailID = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;forms&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;formName&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;form element id&quot;&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\natpos = emailID.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;@&quot;&lt;/span&gt;);\ndotpos = emailID.&lt;span class=&quot;hljs-title function_&quot;&gt;lastIndexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (atpos &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; || ( dotpos - atpos &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; ))\n{\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Please enter correct email ID&quot;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Else you can use &lt;a href=&quot;http://en.wikipedia.org/wiki/JQuery&quot; rel=&quot;noreferrer&quot;&gt;jQuery&lt;/a&gt;. Inside rules define:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-yaml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;eMailId:&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attr&quot;&gt;required:&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;email:&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Regex update 2018! try this&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; val = &lt;span class=&quot;hljs-string&quot;&gt;&apos;email@domain.com&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/^[a-z0-9][a-z0-9-_\\.]+@([a-z]|[a-z0-9]?[a-z0-9-]+[a-z0-9])\\.[a-z0-9]{2,10}(?:\\.[a-z]{2,10})?$/&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(val)) {\n   &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;passed&apos;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;typscript version complete&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; emailValid = (&lt;span class=&quot;hljs-attr&quot;&gt;val&lt;/span&gt;:&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;):&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;boolean&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-regexp&quot;&gt;/^[a-z0-9][a-z0-9-_\\.]+@([a-z]|[a-z0-9]?[a-z0-9-]+[a-z0-9])\\.[a-z0-9]{2,10}(?:\\.[a-z]{2,10})?$/&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(val);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;more info &lt;a href=&quot;https://git.io/vhEfc&quot; rel=&quot;noreferrer&quot;&gt;https://git.io/vhEfc&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;My knowledge of &lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot; rel=&quot;noreferrer&quot;&gt;regular expressions&lt;/a&gt; is not that good. That&apos;s why I check the general syntax with a simple regular expression first and check more specific options with other functions afterwards. This may not be not the best technical solution, but this way I&apos;m way more flexible and faster.&lt;/p&gt;\n\n&lt;p&gt;The most common errors I&apos;ve come across are spaces (especially at the beginning and end) and occasionally a double dot.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;function check_email(&lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt;.match(/\\S+@\\S+\\.\\S+/)){ &lt;span class=&quot;hljs-comment&quot;&gt;// Jaymon&apos;s / Squirtle&apos;s solution&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Do something&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt;.indexOf(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)!=-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; || &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt;.indexOf(&lt;span class=&quot;hljs-string&quot;&gt;&apos;..&apos;&lt;/span&gt;)!=-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;){\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Do something&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n\ncheck_email(&lt;span class=&quot;hljs-string&quot;&gt;&apos;check@thiscom&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Returns false&lt;/span&gt;\ncheck_email(&lt;span class=&quot;hljs-string&quot;&gt;&apos;check@this..com&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Returns false&lt;/span&gt;\ncheck_email(&lt;span class=&quot;hljs-string&quot;&gt;&apos; check@this.com&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Returns false&lt;/span&gt;\ncheck_email(&lt;span class=&quot;hljs-string&quot;&gt;&apos;check@this.com&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Returns true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In contrast to &lt;em&gt;squirtle&lt;/em&gt;, here is a complex solution, but it does a mighty fine job of validating emails properly:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isEmail&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;email&lt;/span&gt;) { \n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-regexp&quot;&gt;/^((([a-z]|\\d|[!#\\$%&amp;amp;&apos;\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&amp;amp;&apos;\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(email);\n} \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Use like so:&lt;br&gt;&lt;br&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;isEmail&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;youremail@yourdomain.com&apos;&lt;/span&gt;)){ &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;This is email is valid&apos;&lt;/span&gt;); }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Regex for validating email address&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-markdown&quot;&gt;[&lt;span class=&quot;hljs-string&quot;&gt;a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-&lt;/span&gt;]+(?:\\.[&lt;span class=&quot;hljs-string&quot;&gt;a-z0-9!#$%&amp;amp;&apos;*+/=?^_`{|}~-&lt;/span&gt;]+)&lt;span class=&quot;hljs-emphasis&quot;&gt;*@(?:[&lt;span class=&quot;hljs-string&quot;&gt;a-z0-9&lt;/span&gt;](&lt;span class=&quot;hljs-link&quot;&gt;?:[a-z0-9-]*[a-z0-9]&lt;/span&gt;)?\\.)+[&lt;span class=&quot;hljs-string&quot;&gt;a-z0-9&lt;/span&gt;](&lt;span class=&quot;hljs-link&quot;&gt;?:[a-z0-9-]*[a-z0-9]&lt;/span&gt;)+\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; testresults\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;checkemail&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;validation&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;emailcheck&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; filter = &lt;span class=&quot;hljs-regexp&quot;&gt;/^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (filter.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(str))\n    testresults = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Please input a valid email address!&quot;&lt;/span&gt;)\n    testresults = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (testresults)\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;checkbae&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;layers&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getElementById&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;all&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;checkemail&lt;/span&gt;()\n  &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;validation&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onSubmit&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;return checkbae()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  Please input a valid email address:&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;emailcheck&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Submit&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Here is a very good discussion about using regular expressions to validate email addresses; &quot;&lt;a href=&quot;http://fightingforalostcause.net/misc/2006/compare-email-regex.php&quot; rel=&quot;noreferrer&quot;&gt;Comparing E-mail Address Validating Regular Expressions&lt;/a&gt;&quot;&lt;/p&gt;\n\n&lt;p&gt;Here is the current top expression, that is JavaScript compatible, for reference purposes:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;/^[-a-z0-9~!$%^&amp;amp;*_=+}{\\&lt;span class=&quot;hljs-string&quot;&gt;&apos;?]+(\\.[-a-z0-9~!$%^&amp;amp;*_=+}{\\&apos;&lt;/span&gt;?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/i\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Apparently, that&apos;s it:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;/^([\\w\\!\\&lt;span class=&quot;hljs-comment&quot;&gt;#$\\%\\&amp;amp;\\&apos;\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+\\.)*[\\w\\!\\#$\\%\\&amp;amp;\\&apos;\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+@((((([a-z0-9]{1}[a-z0-9\\-]{0,62}[a-z0-9]{1})|[a-z])\\.)+[a-z]{2,6})|(\\d{1,3}\\.){3}\\d{1,3}(\\:\\d{1,5})?)$/i&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Taken from &lt;a href=&quot;http://fightingforalostcause.net/misc/2006/compare-email-regex.php&quot; rel=&quot;noreferrer&quot;&gt;http://fightingforalostcause.net/misc/2006/compare-email-regex.php&lt;/a&gt; on Oct 1 &apos;10.&lt;/p&gt;\n\n&lt;p&gt;But, of course, that&apos;s ignoring internationalization.&lt;/p&gt;\n    ","\n&lt;p&gt;I was looking for a Regex in JS that passes all Email Address test cases:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;email@example.com&lt;/code&gt; Valid email&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;firstname.lastname@example.com&lt;/code&gt;  Email contains dot in the address field&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;email@subdomain.example.com&lt;/code&gt; Email contains dot with subdomain&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;firstname+lastname@example.com&lt;/code&gt;   Plus sign is considered valid character&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;email@192.0.2.123&lt;/code&gt; Domain is valid IP address&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;email@[192.0.2.123]&lt;/code&gt; Square bracket around IP address is considered valid&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;email@example.com&lt;/code&gt; Quotes around email is considered valid&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;1234567890@example.com&lt;/code&gt; Digits in address are valid&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;email@domain-one.example&lt;/code&gt; Dash in domain name is valid&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;_______@example.com&lt;/code&gt; Underscore in the address field is valid&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;email@example.name&lt;/code&gt; &lt;code&gt;.name&lt;/code&gt; is valid Top Level Domain name&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;email@example.co.jp&lt;/code&gt; Dot in Top Level Domain name also considered valid (using &lt;code&gt;co.jp&lt;/code&gt; as example here)&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;firstname-lastname@example.com&lt;/code&gt; Dash in address field is valid&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Here we go :&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://regexr.com/3f07j&quot; rel=&quot;noreferrer&quot;&gt;http://regexr.com/3f07j&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;OR regex:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;Regex = /(([^&amp;lt;&amp;gt;()\\[\\]\\\\.,;:\\&lt;span class=&quot;hljs-symbol&quot;&gt;s@&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;]+(\\.[^&amp;lt;&amp;gt;()\\[\\]\\\\.,;:\\s@&quot;&lt;/span&gt;]+)*)|(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.+&quot;&lt;/span&gt;))@[*[a-zA-Z0-&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;-]+.[a-zA-Z0-&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;-.]+]*/\n&lt;/code&gt;&lt;/pre&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Alex The reason I added this comment is that the suggested regex in the accepted answer will not allow existing live email addresses which is a bad start for a customer, and the really big problem is that even IF the address was accepted it still does not say if it works.  The only way to reliably verify that a supplied email is a working valid email is to send a mail with a verification link.  So, if your use case does not demand that you verify the email, just do a minimal test for @, otherwise use a verification email. Regex will only provide bad user experience.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/479137/david-m%c3%a5rtensson&quot; title=&quot;7,430 reputation&quot; class=&quot;comment-user&quot;&gt;David Mårtensson&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment119081127_46155&quot;&gt;&lt;span title=&quot;2021-05-03 14:56:56Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 3, 2021 at 14:56&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@David Mårtensson I added a + on your thoughts. However I do think that a verification email-link thing also can be bad user experience. One that can make you lose a customer.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2761299/mikael1000&quot; title=&quot;307 reputation&quot; class=&quot;comment-user&quot;&gt;mikael1000&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment119873800_46155&quot;&gt;&lt;span title=&quot;2021-06-03 10:22:01Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 3, 2021 at 10:22&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@mikael1000 Sure, but what is the purpose of a regex validation when you will not know if its a valid email anyway. If you do not want to intrude on the customer with a validation link just do the most simple validation &amp;lt;something&amp;gt; at &amp;lt;something&amp;gt; and leave it at that. It will ensure that the customer at least added something that might be an email, anything more it mostly a waste of code until you get to actually validating. You could possibly check if the domain exists with a dns lookup.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/479137/david-m%c3%a5rtensson&quot; title=&quot;7,430 reputation&quot; class=&quot;comment-user&quot;&gt;David Mårtensson&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment119908090_46155&quot;&gt;&lt;span title=&quot;2021-06-04 14:23:12Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 4, 2021 at 14:23&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@DavidMårtensson A customer that mistypes one character in her e-mail will have it regexp validated where it still is wrong. The result will be: &lt;i&gt;no&lt;/i&gt; communication possible. To me that is the &lt;b&gt;worst&lt;/b&gt; user experience one can imagine. A validation confirmation will engage the user in a conversation which shows respect and genuine interest in customers needs.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/718960/theking2&quot; title=&quot;1,497 reputation&quot; class=&quot;comment-user&quot;&gt;theking2&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124174754_46155&quot;&gt;&lt;span title=&quot;2021-12-06 12:39:11Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 6, 2021 at 12:39&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Very similar: &lt;i&gt;&lt;a href=&quot;https://stackoverflow.com/questions/201323/&quot;&gt;How can I validate an email address using a regular expression?&lt;/a&gt;&lt;/i&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125771806_46155&quot;&gt;&lt;span title=&quot;2022-02-16 23:18:09Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 16 at 23:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This regex eliminates valid, in-use emails.  Do not use.  Google for &quot;RFC822&quot; or &quot;RFC2822&quot; to get a proper regex.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/22483/randal-schwartz&quot; title=&quot;34,217 reputation&quot; class=&quot;comment-user&quot;&gt;Randal Schwartz&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment3855831_46181&quot;&gt;&lt;span title=&quot;2010-09-08 02:34:23Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Sep 8, 2010 at 2:34&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This doesn&apos;t even accept the examples in RFC 822. Some simple cases it doesn&apos;t match a\\@b@c.com, a(b)@c.com. See the RFC for more. Here&apos;s a regex that won&apos;t reject any valid addresses [^@]+@[^@]+\\.[^@]+ and protects against common errors.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1666946/vroo&quot; title=&quot;1,014 reputation&quot; class=&quot;comment-user&quot;&gt;Vroo&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment17773334_46181&quot;&gt;&lt;span title=&quot;2012-10-26 06:32:11Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 26, 2012 at 6:32&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;You cannot validate email addresses, period. The only one who can validate an email address is the provider of the email address. For example, this answer says these email addresses: &lt;code&gt;%2@gmail.com, &quot;%2&quot;@gmail.com, &quot;a..b&quot;@gmail.com, &quot;a_b&quot;@gmail.com, _@gmail.com, 1@gmail.com , 1_example@something.gmail.com&lt;/code&gt; are all valid, but Gmail will never allow any of these email addresses. You should do this by accepting the email address and sending an email message to that email address, with a code/link the user must visit to confirm validity.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/606539/kevin-fegan&quot; title=&quot;1,272 reputation&quot; class=&quot;comment-user&quot;&gt;Kevin Fegan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment32449168_46181&quot;&gt;&lt;span title=&quot;2014-02-01 08:49:15Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 1, 2014 at 8:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@KevinFegan let&apos;s be realistic: you would not be using JavaScript to confirm whether an e-mail is authentic. I see this validation as perfectly reasonable when a user signs up. You probably do not want to bother sending verification e-mails to addresses that cannot possibly exist. Some might also have outbound e-mail limits, making it north worth it to send e-mails to &lt;code&gt;email@localhost&lt;/code&gt;, &lt;code&gt;i don&apos;t have an email&lt;/code&gt; or any other funny user inputs.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/7089726/undefined&quot; title=&quot;908 reputation&quot; class=&quot;comment-user&quot;&gt;undefined&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120912172_46181&quot;&gt;&lt;span title=&quot;2021-07-16 23:02:29Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 16, 2021 at 23:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;gautam+@Gmail.com - showing is valid which should not&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/8618965/gautam-parmar&quot; title=&quot;524 reputation&quot; class=&quot;comment-user&quot;&gt;Gautam Parmar&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment121370093_46181&quot;&gt;&lt;span title=&quot;2021-08-06 06:33:05Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 6, 2021 at 6:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;You can implement something 20x as long that might cause problems for a few users and might not be valid in the future, or you can grab ImmortalFirefly&apos;s version to make sure they at least put in the effort to make it look real. Depending on your application it may be more likely to come across  someone will get mad because you don&apos;t accept their unconventional email, rather than someone who causes problems by entering email addresses that don&apos;t really exist (which they can do anyways by entering a 100% valid RFC2822 email address but using an unregistered username or domain). Upvoted!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/83358/user83358&quot; title=&quot;954 reputation&quot; class=&quot;comment-user&quot;&gt;user83358&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment15560460_9204568&quot;&gt;&lt;span title=&quot;2012-07-30 18:20:04Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 30, 2012 at 18:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@ImmortalFirefly, the regex you provided will actually match &lt;code&gt;name@again@example.com&lt;/code&gt;. Try pasting your line into a JavaScript console. I believe your intention was to match only the entire text, which would require the beginning of text &apos;^&apos; and end of text &apos;$&apos; operators. The one I&apos;m using is &lt;code&gt;/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(&apos;name@again@example.com&apos;)&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/384954/oregontrail&quot; title=&quot;7,966 reputation&quot; class=&quot;comment-user&quot;&gt;OregonTrail&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment15817351_9204568&quot;&gt;&lt;span title=&quot;2012-08-09 14:58:13Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 9, 2012 at 14:58&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The second regexp does not require a top-level domain, i.e. it accepts &lt;code&gt;user@domain&lt;/code&gt;. But AFAIK this is actually a valid e-mail address, although uncommon. The first regexp requires a TLD, so it doesn&apos;t cover these types of addresses.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5193586/waldgeist&quot; title=&quot;487 reputation&quot; class=&quot;comment-user&quot;&gt;waldgeist&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120874300_9204568&quot;&gt;&lt;span title=&quot;2021-07-15 13:00:42Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 15, 2021 at 13:00&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Emails can contain multiple &lt;code&gt;@&lt;/code&gt; signs (as comments), also an email doesn&apos;t have to contain a period.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/9835872/ruohola&quot; title=&quot;19,370 reputation&quot; class=&quot;comment-user&quot;&gt;ruohola&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122784271_9204568&quot;&gt;&lt;span title=&quot;2021-10-06 14:08:44Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 6, 2021 at 14:08&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@JoseG. Yes. E.g. &lt;code&gt;http://ai&lt;/code&gt; is someone&apos;s valid domain, so they could use e.g. &lt;code&gt;a@ai&lt;/code&gt; as their email.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/9835872/ruohola&quot; title=&quot;19,370 reputation&quot; class=&quot;comment-user&quot;&gt;ruohola&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125621416_9204568&quot;&gt;&lt;span title=&quot;2022-02-10 09:42:59Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 10 at 9:42&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;NB: &quot;In actual use &lt;i&gt;today&lt;/i&gt;&quot; may have been valid when the code was written, back in 200x. The code &lt;b&gt;will&lt;/b&gt; likely remain in use beyond that specific year. (If I had a dime for every &quot;meh, no one will ever use a 4+-letter TLD except those specific ones&quot; I had to fix, I could corner the world&apos;s copper and nickel market ;))&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/19746/piskvor-left-the-building&quot; title=&quot;89,621 reputation&quot; class=&quot;comment-user&quot;&gt;Piskvor left the building&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment14403312_1373724&quot;&gt;&lt;span title=&quot;2012-06-13 15:51:34Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 13, 2012 at 15:51&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Note that this doesn&apos;t catch some valid email addresses, like these emoji ones: &lt;a href=&quot;https://mailoji.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;mailoji.com&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2691058/toastrackenigma&quot; title=&quot;6,435 reputation&quot; class=&quot;comment-user&quot;&gt;Toastrackenigma&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122769789_1373724&quot;&gt;&lt;span title=&quot;2021-10-06 01:28:09Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 6, 2021 at 1:28&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Toastrackenigma if someone is using an emoji email doesn&apos;t deserve to subscribe to my website. As easy as that.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1850851/cristian-tra%c3%acna&quot; title=&quot;8,436 reputation&quot; class=&quot;comment-user&quot;&gt;Cristian Traìna&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128103509_1373724&quot;&gt;&lt;span title=&quot;2022-06-06 13:24:58Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 6 at 13:24&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;+1 as sending email and seeing what happens is the only real sure way to validate an email address , theres no need to do more than a simple regex match.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/489364/kommradhomer&quot; title=&quot;4,001 reputation&quot; class=&quot;comment-user&quot;&gt;kommradHomer&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment15283044_48800&quot;&gt;&lt;span title=&quot;2012-07-19 07:14:33Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 19, 2012 at 7:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;But it won&apos;t accept &quot;Mohit Atray&quot;@gmail.com because it contains space character. Maybe we should just use /^\\S.*@\\S+$/ regex.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/7649590/mohit-atray&quot; title=&quot;440 reputation&quot; class=&quot;comment-user&quot;&gt;Mohit Atray&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120724327_48800&quot;&gt;&lt;span title=&quot;2021-07-08 19:57:10Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 8, 2021 at 19:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is the best answer&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/829771/merc&quot; title=&quot;15,276 reputation&quot; class=&quot;comment-user&quot;&gt;Merc&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment126297581_48800&quot;&gt;&lt;span title=&quot;2022-03-13 09:16:13Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 13 at 9:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;That&apos;s still not valid.  Spaces are permitted in the local-part as long as they are properly escaped (in double quotes).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/22483/randal-schwartz&quot; title=&quot;34,217 reputation&quot; class=&quot;comment-user&quot;&gt;Randal Schwartz&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128428342_48800&quot;&gt;&lt;span title=&quot;2022-06-21 22:10:28Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 21 at 22:10&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@kommradHomer -- a &quot;regex invalid&quot; address is almost always valid, because whatever regex you use to validate an email address is almost certainly wrong and will exclude valid email addresses. An email address is &lt;code&gt;name_part@domain_part&lt;/code&gt; and practically anything, &lt;b&gt;including&lt;/b&gt; an &lt;code&gt;@&lt;/code&gt;, is valid in the name_part; The address &lt;code&gt;foo@bar@machine.subdomain.example.museum&lt;/code&gt; is legal, although it must be escaped as &lt;code&gt;foo\\@bar@machine....&lt;/code&gt;. Once the email reaches the domain e.g. &apos;example.com&apos; that domain can route the mail &quot;locally&quot; so &quot;strange&quot; usernames and hostnames can exist.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/17300/stephen-p&quot; title=&quot;13,870 reputation&quot; class=&quot;comment-user&quot;&gt;Stephen P&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment21526644_815232&quot;&gt;&lt;span title=&quot;2013-03-07 01:40:17Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 7, 2013 at 1:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;this is good, but the problem with this is that it must be inside a &lt;code&gt;form&lt;/code&gt; tag and submitted by a &lt;code&gt;submit&lt;/code&gt; input, which not everyone has the luxury of doing. Also, you can&apos;t really style the error message.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/7173/jason&quot; title=&quot;50,089 reputation&quot; class=&quot;comment-user&quot;&gt;Jason&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment9932913_7791100&quot;&gt;&lt;span title=&quot;2011-11-12 00:08:32Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 12, 2011 at 0:08&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;At first I found this answer useful, but I tried with some invalid email address and the regex said there were valid... by example : &lt;code&gt;bar@domain&lt;/code&gt; (extension is missing),  &lt;code&gt;A@b@c@example.com&lt;/code&gt; (multiple @) and so on (cf &lt;a href=&quot;https://en.wikipedia.org/wiki/Email_address#Examples&quot; rel=&quot;nofollow noreferrer&quot;&gt;en.wikipedia.org/wiki/Email_address#Examples&lt;/a&gt;). I found a nice regex here: &lt;a href=&quot;https://emailregex.com&quot; rel=&quot;nofollow noreferrer&quot;&gt;emailregex.com&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3967425/thomas-champion&quot; title=&quot;113 reputation&quot; class=&quot;comment-user&quot;&gt;Thomas Champion&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123164022_7791100&quot;&gt;&lt;span title=&quot;2021-10-22 15:30:55Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 22, 2021 at 15:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@ThomasChampion Multiple &quot;@&quot; IS valid. First point is valid though.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/16225961/knp&quot; title=&quot;64 reputation&quot; class=&quot;comment-user&quot;&gt;KNP&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124183047_7791100&quot;&gt;&lt;span title=&quot;2021-12-06 18:26:27Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 6, 2021 at 18:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@KNP Multiple &lt;code&gt;@&lt;/code&gt; is valid only if the extra &quot;@&quot; appear in username part and is wrapped in double quote. It seems that also the second point (missing extension) is not valid anymore since 2013 (&lt;a href=&quot;https://www.icann.org/en/announcements/details/new-gtld-dotless-domain-names-prohibited-30-8-2013-en&quot; rel=&quot;nofollow noreferrer&quot;&gt;icann.org/en/announcements/details/&lt;/a&gt;), but yes it depends, I guess someone could consider extension optional. Finally, I choose the module &lt;code&gt;address&lt;/code&gt; from joi: &lt;a href=&quot;https://joi.dev/module/address/api/?v=4.1.0#emailisvalidemail-options&quot; rel=&quot;nofollow noreferrer&quot;&gt;joi.dev/module/address/api/?v=4.1.0#emailisvalidemail-options&lt;/a&gt; to validate email addresss in my app.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3967425/thomas-champion&quot; title=&quot;113 reputation&quot; class=&quot;comment-user&quot;&gt;Thomas Champion&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124213471_7791100&quot;&gt;&lt;span title=&quot;2021-12-07 21:37:24Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 7, 2021 at 21:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This should be the accepted answer by a long shot. Let browser vendors with on staff regex gurus maintain massively complicated regexes for email addresses. Your average frontend dev building a form for collecting email does not often have time to master verbose regex. Yes you have to rely on the regex the vendor provides, but if you need something more complex, do it on the server and or send an actual email and check the response&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2043490/matt&quot; title=&quot;519 reputation&quot; class=&quot;comment-user&quot;&gt;Matt&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120897648_13975255&quot;&gt;&lt;span title=&quot;2021-07-16 11:04:36Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 16, 2021 at 11:04&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is the almost perfect solution. Only little thing that should be added is a check for empty field. HTML5 &apos;email&apos; type accepts an empty string as a valid input.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2306084/nurshomik&quot; title=&quot;207 reputation&quot; class=&quot;comment-user&quot;&gt;NurShomik&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124705631_13975255&quot;&gt;&lt;span title=&quot;2021-12-31 23:00:02Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 31, 2021 at 23:00&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thats what the &lt;code&gt;input.required = true;&lt;/code&gt; line should take care of ;-)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/113195/boldewyn&quot; title=&quot;79,062 reputation&quot; class=&quot;comment-user&quot;&gt;Boldewyn&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124727201_13975255&quot;&gt;&lt;span title=&quot;2022-01-02 17:18:48Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 2 at 17:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;HTML5 &apos;email&apos; type accepts an empty string incase the field is not requierd. But if user decide to enter the email, it need to be valide.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1170231/marcb&quot; title=&quot;143 reputation&quot; class=&quot;comment-user&quot;&gt;marcb&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125351797_13975255&quot;&gt;&lt;span title=&quot;2022-01-29 16:49:59Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 29 at 16:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I might repeat myself, but have you noticed the &lt;code&gt;input.required = true;&lt;/code&gt; line?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/113195/boldewyn&quot; title=&quot;79,062 reputation&quot; class=&quot;comment-user&quot;&gt;Boldewyn&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125364522_13975255&quot;&gt;&lt;span title=&quot;2022-01-30 13:18:25Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 30 at 13:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Kato: It uses some incompatible extensions, including &lt;code&gt;(?&amp;gt;&lt;/code&gt; to stop backtracking and &lt;code&gt;(?&amp;lt;angle&amp;gt;&amp;lt;)(?(angle)&amp;gt;)&lt;/code&gt; to avoid providing a lengthy &lt;code&gt;|&lt;/code&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/707111/ry&quot; title=&quot;210,143 reputation&quot; class=&quot;comment-user&quot;&gt;Ry-&lt;/a&gt;\n&lt;span class=&quot;mod-flair &quot; title=&quot;Moderator&quot;&gt;&lt;/span&gt;                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment33859770_46170&quot;&gt;&lt;span title=&quot;2014-03-09 20:05:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 9, 2014 at 20:05&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The &lt;code&gt;match&lt;/code&gt; method returns an array, the &lt;code&gt;test&lt;/code&gt; method, which returns a boolean, would be better for this situation.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/8559495/ipzard&quot; title=&quot;1,801 reputation&quot; class=&quot;comment-user&quot;&gt;iPzard&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment114453575_46170&quot;&gt;&lt;span title=&quot;2020-11-07 20:43:27Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 7, 2020 at 20:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;IDN addresses are not validated (info@üpöü.com)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2360439/d-a-h&quot; title=&quot;815 reputation&quot; class=&quot;comment-user&quot;&gt;D.A.H&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment39526585_16016476&quot;&gt;&lt;span title=&quot;2014-08-17 17:38:38Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 17, 2014 at 17:38&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&apos;a@a&apos; returns valid: &lt;a href=&quot;https://jsfiddle.net/pmiranda/guoyh4dv/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsfiddle.net/pmiranda/guoyh4dv&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3541320/pmiranda&quot; title=&quot;6,262 reputation&quot; class=&quot;comment-user&quot;&gt;pmiranda&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment116718839_16016476&quot;&gt;&lt;span title=&quot;2021-02-02 18:18:54Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 2, 2021 at 18:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@pmiranda That &lt;i&gt;is&lt;/i&gt; a valid email address.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/9835872/ruohola&quot; title=&quot;19,370 reputation&quot; class=&quot;comment-user&quot;&gt;ruohola&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122620037_16016476&quot;&gt;&lt;span title=&quot;2021-09-29 11:01:24Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 29, 2021 at 11:01&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@ruohola it has not top-level domain (separated by periods) &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3696&quot; rel=&quot;nofollow noreferrer&quot;&gt;datatracker.ietf.org/doc/html/rfc3696&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3541320/pmiranda&quot; title=&quot;6,262 reputation&quot; class=&quot;comment-user&quot;&gt;pmiranda&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122621373_16016476&quot;&gt;&lt;span title=&quot;2021-09-29 11:59:24Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 29, 2021 at 11:59&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@pmiranda E.g. &lt;code&gt;http://ai&lt;/code&gt; is someone&apos;s valid domain, so they could use e.g. &lt;code&gt;a@ai&lt;/code&gt; as their email.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/9835872/ruohola&quot; title=&quot;19,370 reputation&quot; class=&quot;comment-user&quot;&gt;ruohola&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122622360_16016476&quot;&gt;&lt;span title=&quot;2021-09-29 12:40:25Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 29, 2021 at 12:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;what if there will be more than one &apos;@&apos; symbol? other restricted symbols? This validation cannot be trusted...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2781047/iwazovsky&quot; title=&quot;1,879 reputation&quot; class=&quot;comment-user&quot;&gt;iwazovsky&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment47876914_17642237&quot;&gt;&lt;span title=&quot;2015-04-26 10:14:10Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 26, 2015 at 10:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;is a@b valid email ?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3058254/aravin&quot; title=&quot;5,992 reputation&quot; class=&quot;comment-user&quot;&gt;Aravin&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment115585824_17642237&quot;&gt;&lt;span title=&quot;2020-12-20 10:17:24Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 20, 2020 at 10:17&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Its better than most, yes you could have more than one @ with this, but that could also be a valid email like &quot;@&quot;@mydomain.jskd or elldffs(this is @ comment)@mydomain.kjfdij. Both are syntactically valid emails&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/479137/david-m%c3%a5rtensson&quot; title=&quot;7,430 reputation&quot; class=&quot;comment-user&quot;&gt;David Mårtensson&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment117092198_17642237&quot;&gt;&lt;span title=&quot;2021-02-16 18:37:11Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 16, 2021 at 18:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Aravin Yes It is.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/9835872/ruohola&quot; title=&quot;19,370 reputation&quot; class=&quot;comment-user&quot;&gt;ruohola&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122620049_17642237&quot;&gt;&lt;span title=&quot;2021-09-29 11:01:48Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 29, 2021 at 11:01&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@iwazovsky If you&apos;re using string-level validation to determine whether you can &quot;trust&quot; the email entered, you&apos;re already doing it wrong. Using it for anything other than catching mistakes is a lost cause, and most mistakes that don&apos;t get caught by this are going to be something that no regex can catch anyway because they&apos;ll probably still look like a valid email.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/7496073/john-montgomery&quot; title=&quot;6,366 reputation&quot; class=&quot;comment-user&quot;&gt;John Montgomery&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125127667_17642237&quot;&gt;&lt;span title=&quot;2022-01-20 00:38:24Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 20 at 0:38&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;gautam+@Gmail.com - showing is valid which should not&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/8618965/gautam-parmar&quot; title=&quot;524 reputation&quot; class=&quot;comment-user&quot;&gt;Gautam Parmar&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment121370088_13178771&quot;&gt;&lt;span title=&quot;2021-08-06 06:33:00Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 6, 2021 at 6:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@GautamParmar gmail and others ignore symbols; mail sent to gautam+@gmail.com would end up in gautam@gmail.com&apos;s email inbox.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2756409/tylerh&quot; title=&quot;20,950 reputation&quot; class=&quot;comment-user&quot;&gt;TylerH&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment127417907_13178771&quot;&gt;&lt;span title=&quot;2022-05-04 13:20:04Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 4 at 13:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This one is easiest solution, we can also use external library like &lt;a href=&quot;https://www.npmjs.com/package/email-validator&quot; rel=&quot;nofollow noreferrer&quot;&gt;email validator&lt;/a&gt; to makes things easier, as mentioned here  &lt;a href=&quot;https://qawithexperts.com/article/javascript/email-validation-using-javascript-with-or-without-regex/317&quot; rel=&quot;nofollow noreferrer&quot;&gt;qawithexperts.com/article/javascript/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/13993546/jyoti&quot; title=&quot;76 reputation&quot; class=&quot;comment-user&quot;&gt;Jyoti&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125185675_17290569&quot;&gt;&lt;span title=&quot;2022-01-22 12:02:27Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 22 at 12:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This allows the entry of so many invalid email addresses it is useless advice.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6178/cazlab&quot; title=&quot;788 reputation&quot; class=&quot;comment-user&quot;&gt;cazlab&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment10925389_8565823&quot;&gt;&lt;span title=&quot;2012-01-06 23:07:44Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 6, 2012 at 23:07&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Extremely outdated now.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6025788/slbox&quot; title=&quot;7,921 reputation&quot; class=&quot;comment-user&quot;&gt;Slbox&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122036103_2932827&quot;&gt;&lt;span title=&quot;2021-09-03 19:02:16Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 3, 2021 at 19:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":198,"title":"How can I validate an email address in JavaScript?","content":"\n                \n&lt;p&gt;I&apos;d like to check if the user input is an email address in JavaScript, before sending it to a server or attempting to send an email to it, to prevent the most basic mistyping. How could I achieve this?&lt;/p&gt;\n    ","slug":"how-can-i-validate-an-email-address-in-javascript-1657385475959","postType":"QUESTION","createdAt":"2022-07-09T16:51:15.000Z","updatedAt":"2022-07-09T16:51:15.000Z","tags":[{"id":1429,"name":"email-validation","slug":"email-validation","createdAt":"2022-07-09T16:51:16.000Z","updatedAt":"2022-07-09T16:51:16.000Z","Questions_Tags":{"questionId":198,"tagId":1429}}]}},"__N_SSG":true}